directive @mark(
  """Marks if field is localized"""
  localized: Boolean

  """Marks if value is default"""
  default: Boolean

  """Marks if the locale is a part of the default fallback"""
  fallback: Boolean

  """Ordered list of fallback locales"""
  fallbackLocales: [String!]

  """Marks the pageInfo"""
  pageInfo: Boolean

  """Marks an aggregate type"""
  aggregate: Boolean

  """Marks a countable type"""
  countable: Boolean

  """Marks an edge type"""
  edge: Boolean

  """Marks a locale enum"""
  locale: Boolean

  """Marks asset url handler"""
  url: Boolean

  """Marks type of mutation kind"""
  mutationKind: _MutationKind

  """Marks kind of mutation input field"""
  mutationInputFieldKind: _MutationInputFieldKind

  """Marks filter and links to parent type"""
  filter: String

  """Marks filter kind"""
  filterKind: _FilterKind

  """Marks if corresponding field is list"""
  filterIsList: Boolean

  """Marks order by"""
  order: Boolean

  """Marks order direction"""
  orderDirection: _OrderDirection

  """Link to the Main type of the connection"""
  connection: String

  """Marks localizations field"""
  localizations: Boolean

  """Marks versions field on model"""
  modelVersions: Boolean

  """Marks document version field on Query"""
  documentVersion: Boolean

  """Marks stages field"""
  stages: Boolean

  """Specifies system createdAt field"""
  createdAtField: String

  """Specifies system updatedAt field"""
  updatedAtField: String

  """Specifies relation input kind"""
  relationInputKind: _RelationInputKind

  """
  Specifies relation kind (e.g. union relation or regular field relation)
  """
  relationKind: _RelationKind

  """Specifies relation input cardinality"""
  relationInputCardinality: _RelationInputCardinality

  """Specifies relation input cardinality of reverse side"""
  reverseRelationInputCardinality: _RelationInputCardinality

  """Specifies model create input type"""
  createInputType: String

  """Specifies model create localization type"""
  createLocalizationInputType: String

  """Specifies GraphCMS field type"""
  fieldType: String

  """Specifies WhereUniqueInput type name"""
  whereUniqueInput: String

  """Specifies whether type is connect input"""
  isConnectInput: Boolean

  """
  Specifies relation input to be for abstract member type, not known master / origin side
  """
  isMemberInput: Boolean

  """Specifies union type name"""
  unionType: Boolean

  """Specifies model a type is part of"""
  model: String

  """Specifies mode of system DateTime fields"""
  systemDateTimeFieldVariation: SystemDateTimeFieldVariation

  """
  If versioned, documents of this model will be able to hold this amount of versions per stage
  """
  versionRetentionCount: Int

  """If versioned, on publishing versions older than x days will be dropped"""
  versionRetentionPeriod: Int

  """Adds field validations"""
  validations: String

  """The model's storage ID"""
  storageId: String

  """Marks richText field return type"""
  isRichTextType: Boolean

  """Marks list richText field return type"""
  isListRichText: Boolean

  """The name of the associated RichText type"""
  richTextType: String

  """Marks relation fields that do not have a reverse side counterpart"""
  isUnidirectional: Boolean

  """
  Specifies if the filter's value can be replaced by the current user's id
  """
  replaceableWithUserId: Boolean
) on OBJECT | FIELD_DEFINITION | ENUM_VALUE | ENUM | INPUT_FIELD_DEFINITION | INPUT_OBJECT | ARGUMENT_DEFINITION

directive @permission(
  """Policy resource names."""
  resources: [String!]

  """Policy action names."""
  actions: [String!]
) on FIELD_DEFINITION

directive @psql(
  """postgres table name"""
  table: String

  """postgres localization table name"""
  localizationTable: String

  """postgres column name"""
  column: [String!]

  """hardcoded postgres id value for enums"""
  id: String

  """postgres join on name"""
  join: [String!]

  """Specifies column for system id field"""
  idColumn: String

  """Specifies column for native sorting for relational fields"""
  prio: String

  """Specifies columns for union member fields"""
  memberColumns: [String!]

  """Specifies system updatedAt column"""
  updatedAtColumn: String
) on OBJECT | FIELD_DEFINITION | ENUM_VALUE | INPUT_FIELD_DEFINITION | ENUM | INPUT_OBJECT | ARGUMENT_DEFINITION

directive @remote(
  """url to fetch the remote content from"""
  url: String!

  """HTTP method used to fetch the remote content from"""
  method: String!

  """optional headers that will be sent in the remote call"""
  headers: Json

  """list of field apiIds that should be send as payload in the remote call"""
  requestParamFields: [String!]!

  """
  list of field storage ids that will available for templates and parameters for the remote call
  """
  payloadFields: [String!]!
) on FIELD_DEFINITION

enum _FilterKind {
  search
  AND
  OR
  NOT
  eq
  eq_not
  in
  not_in
  lt
  lte
  gt
  gte
  contains
  not_contains
  starts_with
  not_starts_with
  ends_with
  not_ends_with
  contains_all
  contains_some
  contains_none
  relational_single
  relational_every
  relational_some
  relational_none
}

enum _MutationInputFieldKind {
  scalar
  richText
  richTextWithEmbeds
  enum
  relation
  union
  virtual
}

enum _MutationKind {
  create
  publish
  unpublish
  update
  upsert
  delete
  updateMany
  publishMany
  unpublishMany
  deleteMany
}

enum _OrderDirection {
  asc
  desc
}

enum _RelationInputCardinality {
  one
  many
}

enum _RelationInputKind {
  create
  update
}

enum _RelationKind {
  regular
  union
}

enum untitled {
  base
  localization
  combined
}

type Aggregate {
  count: Int!
}

"""Asset system model"""
type Asset implements Node {
  """System stage field"""
  stage: Stage!

  """System Locale field"""
  locale: Locale!

  """Get the other localizations for this document"""
  localizations(
    """Potential locales that should be returned"""
    locales: [Locale!]! = [en]

    """Decides if the current locale should be included or not"""
    includeCurrent: Boolean! = false
  ): [Asset!]!

  """Get the document in other stages"""
  documentInStages(
    """Potential stages that should be returned"""
    stages: [Stage!]! = [DRAFT, PUBLISHED]

    """Decides if the current stage should be included or not"""
    includeCurrent: Boolean! = false

    """
    Decides if the documents should match the parent documents locale or should use the fallback order defined in the tree
    """
    inheritLocale: Boolean! = false
  ): [Asset!]!

  """The unique identifier"""
  id: ID!

  """The time the document was created"""
  createdAt(
    """
    Variation of DateTime field to return, allows value from base document,
    current localization, or combined by returning the newer value of both
    """
    variation: SystemDateTimeFieldVariation! = COMBINED
  ): DateTime!

  """The time the document was updated"""
  updatedAt(
    """
    Variation of DateTime field to return, allows value from base document,
    current localization, or combined by returning the newer value of both
    """
    variation: SystemDateTimeFieldVariation! = COMBINED
  ): DateTime!

  """The time the document was published. Null on documents in draft stage."""
  publishedAt(
    """
    Variation of DateTime field to return, allows value from base document,
    current localization, or combined by returning the newer value of both
    """
    variation: SystemDateTimeFieldVariation! = COMBINED
  ): DateTime

  """The file handle"""
  handle: String!

  """The file name"""
  fileName: String!

  """The height of the file"""
  height: Float

  """The file width"""
  width: Float

  """The file size"""
  size: Float

  """The mime type of the file"""
  mimeType: String

  """User that created this document"""
  createdBy(
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `createdBy` is a model without localized fields and will not be
    affected directly by this argument, however the locales will be passed on to
    any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first
    locale matching the provided list of locales will be returned, entries with
    non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): User

  """User that last updated this document"""
  updatedBy(
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `updatedBy` is a model without localized fields and will not be
    affected directly by this argument, however the locales will be passed on to
    any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first
    locale matching the provided list of locales will be returned, entries with
    non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): User

  """User that last published this document"""
  publishedBy(
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `publishedBy` is a model without localized fields and will not be
    affected directly by this argument, however the locales will be passed on to
    any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first
    locale matching the provided list of locales will be returned, entries with
    non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): User
  mainImageFeedItem(
    where: FeedItemWhereInput
    orderBy: FeedItemOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int

    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `mainImageFeedItem` is a model without localized fields and will
    not be affected directly by this argument, however the locales will be
    passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first
    locale matching the provided list of locales will be returned, entries with
    non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): [FeedItem!]!
  mainImageFeedItemCategory(
    where: FeedItemCategoryWhereInput
    orderBy: FeedItemCategoryOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int

    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `mainImageFeedItemCategory` is a model without localized fields
    and will not be affected directly by this argument, however the locales will
    be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first
    locale matching the provided list of locales will be returned, entries with
    non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): [FeedItemCategory!]!
  videoFeedItem(
    where: FeedItemWhereInput
    orderBy: FeedItemOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int

    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `videoFeedItem` is a model without localized fields and will not
    be affected directly by this argument, however the locales will be passed on
    to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first
    locale matching the provided list of locales will be returned, entries with
    non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): [FeedItem!]!
  videoInspirationItem(
    where: InspirationItemWhereInput
    orderBy: InspirationItemOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int

    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `videoInspirationItem` is a model without localized fields and
    will not be affected directly by this argument, however the locales will be
    passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first
    locale matching the provided list of locales will be returned, entries with
    non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): [InspirationItem!]!
  mainImageInspirationItem(
    where: InspirationItemWhereInput
    orderBy: InspirationItemOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int

    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `mainImageInspirationItem` is a model without localized fields and
    will not be affected directly by this argument, however the locales will be
    passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first
    locale matching the provided list of locales will be returned, entries with
    non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): [InspirationItem!]!
  mainImageCategory(
    where: CategoryWhereInput
    orderBy: CategoryOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int

    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `mainImageCategory` is a model without localized fields and will
    not be affected directly by this argument, however the locales will be
    passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first
    locale matching the provided list of locales will be returned, entries with
    non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): [Category!]!

  """List of Asset versions"""
  history(
    limit: Int! = 10
    skip: Int! = 0

    """
    This is optional and can be used to fetch the document version history for a specific stage instead of the current one
    """
    stageOverride: Stage
  ): [Version!]!

  """Get the url for the asset with provided transformations applied."""
  url(transformation: AssetTransformationInput): String!
}

input AssetConnectInput {
  """Document to connect"""
  where: AssetWhereUniqueInput!

  """
  Allow to specify document position in list of connected documents, will default to appending at end of list
  """
  position: ConnectPositionInput
}

"""A connection to a list of items."""
type AssetConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [AssetEdge!]!
  aggregate: Aggregate!
}

input AssetCreateInput {
  createdAt: DateTime
  updatedAt: DateTime
  handle: String!
  fileName: String!
  height: Float
  width: Float
  size: Float
  mimeType: String
  mainImageFeedItem: FeedItemCreateManyInlineInput
  mainImageFeedItemCategory: FeedItemCategoryCreateManyInlineInput
  videoFeedItem: FeedItemCreateManyInlineInput
  videoInspirationItem: InspirationItemCreateManyInlineInput
  mainImageInspirationItem: InspirationItemCreateManyInlineInput
  mainImageCategory: CategoryCreateManyInlineInput

  """
  Inline mutations for managing document localizations excluding the default locale
  """
  localizations: AssetCreateLocalizationsInput
}

input AssetCreateLocalizationDataInput {
  createdAt: DateTime
  updatedAt: DateTime
  handle: String!
  fileName: String!
  height: Float
  width: Float
  size: Float
  mimeType: String
}

input AssetCreateLocalizationInput {
  """Localization input"""
  data: AssetCreateLocalizationDataInput!
  locale: Locale!
}

input AssetCreateLocalizationsInput {
  """Create localizations for the newly-created document"""
  create: [AssetCreateLocalizationInput!]
}

input AssetCreateManyInlineInput {
  """Create and connect multiple existing Asset documents"""
  create: [AssetCreateInput!]

  """Connect multiple existing Asset documents"""
  connect: [AssetWhereUniqueInput!]
}

input AssetCreateOneInlineInput {
  """Create and connect one Asset document"""
  create: AssetCreateInput

  """Connect one existing Asset document"""
  connect: AssetWhereUniqueInput
}

"""An edge in a connection."""
type AssetEdge {
  """The item at the end of the edge."""
  node: Asset!

  """A cursor for use in pagination."""
  cursor: String!
}

"""Identifies documents"""
input AssetManyWhereInput {
  """Contains search across all appropriate fields."""
  _search: String

  """Logical AND on all given filters."""
  AND: [AssetWhereInput!]

  """Logical OR on all given filters."""
  OR: [AssetWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [AssetWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string"""
  id_not_ends_with: ID
  createdAt: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updatedAt: DateTime

  """All values that are not equal to given value."""
  updatedAt_not: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  publishedAt: DateTime

  """All values that are not equal to given value."""
  publishedAt_not: DateTime

  """All values that are contained in given list."""
  publishedAt_in: [DateTime!]

  """All values that are not contained in given list."""
  publishedAt_not_in: [DateTime!]

  """All values less than the given value."""
  publishedAt_lt: DateTime

  """All values less than or equal the given value."""
  publishedAt_lte: DateTime

  """All values greater than the given value."""
  publishedAt_gt: DateTime

  """All values greater than or equal the given value."""
  publishedAt_gte: DateTime
  createdBy: UserWhereInput
  updatedBy: UserWhereInput
  publishedBy: UserWhereInput
  mainImageFeedItem_every: FeedItemWhereInput
  mainImageFeedItem_some: FeedItemWhereInput
  mainImageFeedItem_none: FeedItemWhereInput
  mainImageFeedItemCategory_every: FeedItemCategoryWhereInput
  mainImageFeedItemCategory_some: FeedItemCategoryWhereInput
  mainImageFeedItemCategory_none: FeedItemCategoryWhereInput
  videoFeedItem_every: FeedItemWhereInput
  videoFeedItem_some: FeedItemWhereInput
  videoFeedItem_none: FeedItemWhereInput
  videoInspirationItem_every: InspirationItemWhereInput
  videoInspirationItem_some: InspirationItemWhereInput
  videoInspirationItem_none: InspirationItemWhereInput
  mainImageInspirationItem_every: InspirationItemWhereInput
  mainImageInspirationItem_some: InspirationItemWhereInput
  mainImageInspirationItem_none: InspirationItemWhereInput
  mainImageCategory_every: CategoryWhereInput
  mainImageCategory_some: CategoryWhereInput
  mainImageCategory_none: CategoryWhereInput
}

enum AssetOrderByInput {
  id_ASC
  id_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  publishedAt_ASC
  publishedAt_DESC
  handle_ASC
  handle_DESC
  fileName_ASC
  fileName_DESC
  height_ASC
  height_DESC
  width_ASC
  width_DESC
  size_ASC
  size_DESC
  mimeType_ASC
  mimeType_DESC
}

"""Transformations for Assets"""
input AssetTransformationInput {
  image: ImageTransformationInput
  document: DocumentTransformationInput

  """Pass true if you want to validate the passed transformation parameters"""
  validateOptions: Boolean = false
}

input AssetUpdateInput {
  handle: String
  fileName: String
  height: Float
  width: Float
  size: Float
  mimeType: String
  mainImageFeedItem: FeedItemUpdateManyInlineInput
  mainImageFeedItemCategory: FeedItemCategoryUpdateManyInlineInput
  videoFeedItem: FeedItemUpdateManyInlineInput
  videoInspirationItem: InspirationItemUpdateManyInlineInput
  mainImageInspirationItem: InspirationItemUpdateManyInlineInput
  mainImageCategory: CategoryUpdateManyInlineInput

  """Manage document localizations"""
  localizations: AssetUpdateLocalizationsInput
}

input AssetUpdateLocalizationDataInput {
  handle: String
  fileName: String
  height: Float
  width: Float
  size: Float
  mimeType: String
}

input AssetUpdateLocalizationInput {
  data: AssetUpdateLocalizationDataInput!
  locale: Locale!
}

input AssetUpdateLocalizationsInput {
  """Localizations to create"""
  create: [AssetCreateLocalizationInput!]

  """Localizations to update"""
  updateIt: [AssetUpdateLocalizationInput!]
  upsert: [AssetUpsertLocalizationInput!]

  """Localizations to delete"""
  delete: [Locale!]
}

input AssetUpdateManyInlineInput {
  """Create and connect multiple Asset documents"""
  create: [AssetCreateInput!]

  """Connect multiple existing Asset documents"""
  connect: [AssetConnectInput!]

  """
  Override currently-connected documents with multiple existing Asset documents
  """
  set: [AssetWhereUniqueInput!]

  """Update multiple Asset documents"""
  updateIt: [AssetUpdateWithNestedWhereUniqueInput!]

  """Upsert multiple Asset documents"""
  upsert: [AssetUpsertWithNestedWhereUniqueInput!]

  """Disconnect multiple Asset documents"""
  disconnect: [AssetWhereUniqueInput!]

  """Delete multiple Asset documents"""
  delete: [AssetWhereUniqueInput!]
}

input AssetUpdateManyInput {
  fileName: String
  height: Float
  width: Float
  size: Float
  mimeType: String

  """Optional updates to localizations"""
  localizations: AssetUpdateManyLocalizationsInput
}

input AssetUpdateManyLocalizationDataInput {
  fileName: String
  height: Float
  width: Float
  size: Float
  mimeType: String
}

input AssetUpdateManyLocalizationInput {
  data: AssetUpdateManyLocalizationDataInput!
  locale: Locale!
}

input AssetUpdateManyLocalizationsInput {
  """Localizations to update"""
  updateIt: [AssetUpdateManyLocalizationInput!]
}

input AssetUpdateManyWithNestedWhereInput {
  """Document search"""
  where: AssetWhereInput!

  """Update many input"""
  data: AssetUpdateManyInput!
}

input AssetUpdateOneInlineInput {
  """Create and connect one Asset document"""
  create: AssetCreateInput

  """Update single Asset document"""
  updateIt: AssetUpdateWithNestedWhereUniqueInput

  """Upsert single Asset document"""
  upsert: AssetUpsertWithNestedWhereUniqueInput

  """Connect existing Asset document"""
  connect: AssetWhereUniqueInput

  """Disconnect currently connected Asset document"""
  disconnect: Boolean

  """Delete currently connected Asset document"""
  delete: Boolean
}

input AssetUpdateWithNestedWhereUniqueInput {
  """Unique document search"""
  where: AssetWhereUniqueInput!

  """Document to update"""
  data: AssetUpdateInput!
}

input AssetUpsertInput {
  """Create document if it didn't exist"""
  create: AssetCreateInput!

  """Update document if it exists"""
  updateIt: AssetUpdateInput!
}

input AssetUpsertLocalizationInput {
  updateIt: AssetUpdateLocalizationDataInput!
  create: AssetCreateLocalizationDataInput!
  locale: Locale!
}

input AssetUpsertWithNestedWhereUniqueInput {
  """Unique document search"""
  where: AssetWhereUniqueInput!

  """Upsert data"""
  data: AssetUpsertInput!
}

"""Identifies documents"""
input AssetWhereInput {
  """Contains search across all appropriate fields."""
  _search: String

  """Logical AND on all given filters."""
  AND: [AssetWhereInput!]

  """Logical OR on all given filters."""
  OR: [AssetWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [AssetWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string"""
  id_not_ends_with: ID
  createdAt: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updatedAt: DateTime

  """All values that are not equal to given value."""
  updatedAt_not: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  publishedAt: DateTime

  """All values that are not equal to given value."""
  publishedAt_not: DateTime

  """All values that are contained in given list."""
  publishedAt_in: [DateTime!]

  """All values that are not contained in given list."""
  publishedAt_not_in: [DateTime!]

  """All values less than the given value."""
  publishedAt_lt: DateTime

  """All values less than or equal the given value."""
  publishedAt_lte: DateTime

  """All values greater than the given value."""
  publishedAt_gt: DateTime

  """All values greater than or equal the given value."""
  publishedAt_gte: DateTime
  handle: String

  """All values that are not equal to given value."""
  handle_not: String

  """All values that are contained in given list."""
  handle_in: [String!]

  """All values that are not contained in given list."""
  handle_not_in: [String!]

  """All values containing the given string."""
  handle_contains: String

  """All values not containing the given string."""
  handle_not_contains: String

  """All values starting with the given string."""
  handle_starts_with: String

  """All values not starting with the given string."""
  handle_not_starts_with: String

  """All values ending with the given string."""
  handle_ends_with: String

  """All values not ending with the given string"""
  handle_not_ends_with: String
  fileName: String

  """All values that are not equal to given value."""
  fileName_not: String

  """All values that are contained in given list."""
  fileName_in: [String!]

  """All values that are not contained in given list."""
  fileName_not_in: [String!]

  """All values containing the given string."""
  fileName_contains: String

  """All values not containing the given string."""
  fileName_not_contains: String

  """All values starting with the given string."""
  fileName_starts_with: String

  """All values not starting with the given string."""
  fileName_not_starts_with: String

  """All values ending with the given string."""
  fileName_ends_with: String

  """All values not ending with the given string"""
  fileName_not_ends_with: String
  height: Float

  """All values that are not equal to given value."""
  height_not: Float

  """All values that are contained in given list."""
  height_in: [Float!]

  """All values that are not contained in given list."""
  height_not_in: [Float!]

  """All values less than the given value."""
  height_lt: Float

  """All values less than or equal the given value."""
  height_lte: Float

  """All values greater than the given value."""
  height_gt: Float

  """All values greater than or equal the given value."""
  height_gte: Float
  width: Float

  """All values that are not equal to given value."""
  width_not: Float

  """All values that are contained in given list."""
  width_in: [Float!]

  """All values that are not contained in given list."""
  width_not_in: [Float!]

  """All values less than the given value."""
  width_lt: Float

  """All values less than or equal the given value."""
  width_lte: Float

  """All values greater than the given value."""
  width_gt: Float

  """All values greater than or equal the given value."""
  width_gte: Float
  size: Float

  """All values that are not equal to given value."""
  size_not: Float

  """All values that are contained in given list."""
  size_in: [Float!]

  """All values that are not contained in given list."""
  size_not_in: [Float!]

  """All values less than the given value."""
  size_lt: Float

  """All values less than or equal the given value."""
  size_lte: Float

  """All values greater than the given value."""
  size_gt: Float

  """All values greater than or equal the given value."""
  size_gte: Float
  mimeType: String

  """All values that are not equal to given value."""
  mimeType_not: String

  """All values that are contained in given list."""
  mimeType_in: [String!]

  """All values that are not contained in given list."""
  mimeType_not_in: [String!]

  """All values containing the given string."""
  mimeType_contains: String

  """All values not containing the given string."""
  mimeType_not_contains: String

  """All values starting with the given string."""
  mimeType_starts_with: String

  """All values not starting with the given string."""
  mimeType_not_starts_with: String

  """All values ending with the given string."""
  mimeType_ends_with: String

  """All values not ending with the given string"""
  mimeType_not_ends_with: String
  createdBy: UserWhereInput
  updatedBy: UserWhereInput
  publishedBy: UserWhereInput
  mainImageFeedItem_every: FeedItemWhereInput
  mainImageFeedItem_some: FeedItemWhereInput
  mainImageFeedItem_none: FeedItemWhereInput
  mainImageFeedItemCategory_every: FeedItemCategoryWhereInput
  mainImageFeedItemCategory_some: FeedItemCategoryWhereInput
  mainImageFeedItemCategory_none: FeedItemCategoryWhereInput
  videoFeedItem_every: FeedItemWhereInput
  videoFeedItem_some: FeedItemWhereInput
  videoFeedItem_none: FeedItemWhereInput
  videoInspirationItem_every: InspirationItemWhereInput
  videoInspirationItem_some: InspirationItemWhereInput
  videoInspirationItem_none: InspirationItemWhereInput
  mainImageInspirationItem_every: InspirationItemWhereInput
  mainImageInspirationItem_some: InspirationItemWhereInput
  mainImageInspirationItem_none: InspirationItemWhereInput
  mainImageCategory_every: CategoryWhereInput
  mainImageCategory_some: CategoryWhereInput
  mainImageCategory_none: CategoryWhereInput
}

"""References Asset record uniquely"""
input AssetWhereUniqueInput {
  id: ID
}

type BatchPayload {
  """The number of nodes that have been affected by the Batch operation."""
  count: Long!
}

"""measurement of different parts of the body"""
enum BodyMeasurements {
  Chest
  Hip
  Waist
  Right_arm
  Left_arm
}

type Category implements Node {
  """System stage field"""
  stage: Stage!

  """Get the document in other stages"""
  documentInStages(
    """Potential stages that should be returned"""
    stages: [Stage!]! = [DRAFT, PUBLISHED]

    """Decides if the current stage should be included or not"""
    includeCurrent: Boolean! = false

    """
    Decides if the documents should match the parent documents locale or should use the fallback order defined in the tree
    """
    inheritLocale: Boolean! = false
  ): [Category!]!

  """The unique identifier"""
  id: ID!

  """The time the document was created"""
  createdAt: DateTime!

  """The time the document was updated"""
  updatedAt: DateTime!

  """The time the document was published. Null on documents in draft stage."""
  publishedAt: DateTime
  title: String

  """User that created this document"""
  createdBy(
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `createdBy` is a model without localized fields and will not be
    affected directly by this argument, however the locales will be passed on to
    any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first
    locale matching the provided list of locales will be returned, entries with
    non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): User

  """User that last updated this document"""
  updatedBy(
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `updatedBy` is a model without localized fields and will not be
    affected directly by this argument, however the locales will be passed on to
    any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first
    locale matching the provided list of locales will be returned, entries with
    non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): User

  """User that last published this document"""
  publishedBy(
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `publishedBy` is a model without localized fields and will not be
    affected directly by this argument, however the locales will be passed on to
    any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first
    locale matching the provided list of locales will be returned, entries with
    non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): User
  mainImage(
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `mainImage` is a model without localized fields and will not be
    affected directly by this argument, however the locales will be passed on to
    any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first
    locale matching the provided list of locales will be returned, entries with
    non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): Asset
  categoryTitle: CategoryTitle
  feedItems(
    skip: Int
    after: String
    before: String
    first: Int
    last: Int

    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `feedItems` is a model without localized fields and will not be
    affected directly by this argument, however the locales will be passed on to
    any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first
    locale matching the provided list of locales will be returned, entries with
    non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): [CategoryFeedItems!]!

  """List of Category versions"""
  history(
    limit: Int! = 10
    skip: Int! = 0

    """
    This is optional and can be used to fetch the document version history for a specific stage instead of the current one
    """
    stageOverride: Stage
  ): [Version!]!
}

input CategoryConnectInput {
  """Document to connect"""
  where: CategoryWhereUniqueInput!

  """
  Allow to specify document position in list of connected documents, will default to appending at end of list
  """
  position: ConnectPositionInput
}

"""A connection to a list of items."""
type CategoryConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [CategoryEdge!]!
  aggregate: Aggregate!
}

input CategoryCreateInput {
  createdAt: DateTime
  updatedAt: DateTime
  title: String
  mainImage: AssetCreateOneInlineInput
  categoryTitle: CategoryTitle
  feedItems: CategoryFeedItemsCreateManyInlineInput
}

input CategoryCreateManyInlineInput {
  """Create and connect multiple existing Category documents"""
  create: [CategoryCreateInput!]

  """Connect multiple existing Category documents"""
  connect: [CategoryWhereUniqueInput!]
}

input CategoryCreateOneInlineInput {
  """Create and connect one Category document"""
  create: CategoryCreateInput

  """Connect one existing Category document"""
  connect: CategoryWhereUniqueInput
}

"""An edge in a connection."""
type CategoryEdge {
  """The item at the end of the edge."""
  node: Category!

  """A cursor for use in pagination."""
  cursor: String!
}

union CategoryFeedItems = FeedItem

input CategoryFeedItemsConnectInput {
  FeedItem: FeedItemConnectInput
}

input CategoryFeedItemsCreateInput {
  FeedItem: FeedItemCreateInput
}

input CategoryFeedItemsCreateManyInlineInput {
  """Create and connect multiple existing CategoryFeedItems documents"""
  create: [CategoryFeedItemsCreateInput!]

  """Connect multiple existing CategoryFeedItems documents"""
  connect: [CategoryFeedItemsWhereUniqueInput!]
}

input CategoryFeedItemsCreateOneInlineInput {
  """Create and connect one CategoryFeedItems document"""
  create: CategoryFeedItemsCreateInput

  """Connect one existing CategoryFeedItems document"""
  connect: CategoryFeedItemsWhereUniqueInput
}

input CategoryFeedItemsUpdateInput {
  FeedItem: FeedItemUpdateInput
}

input CategoryFeedItemsUpdateManyInlineInput {
  """Create and connect multiple CategoryFeedItems documents"""
  create: [CategoryFeedItemsCreateInput!]

  """Connect multiple existing CategoryFeedItems documents"""
  connect: [CategoryFeedItemsConnectInput!]

  """
  Override currently-connected documents with multiple existing CategoryFeedItems documents
  """
  set: [CategoryFeedItemsWhereUniqueInput!]

  """Update multiple CategoryFeedItems documents"""
  updateIt: [CategoryFeedItemsUpdateWithNestedWhereUniqueInput!]

  """Upsert multiple CategoryFeedItems documents"""
  upsert: [CategoryFeedItemsUpsertWithNestedWhereUniqueInput!]

  """Disconnect multiple CategoryFeedItems documents"""
  disconnect: [CategoryFeedItemsWhereUniqueInput!]

  """Delete multiple CategoryFeedItems documents"""
  delete: [CategoryFeedItemsWhereUniqueInput!]
}

input CategoryFeedItemsUpdateManyWithNestedWhereInput {
  FeedItem: FeedItemUpdateManyWithNestedWhereInput
}

input CategoryFeedItemsUpdateOneInlineInput {
  """Create and connect one CategoryFeedItems document"""
  create: CategoryFeedItemsCreateInput

  """Update single CategoryFeedItems document"""
  updateIt: CategoryFeedItemsUpdateWithNestedWhereUniqueInput

  """Upsert single CategoryFeedItems document"""
  upsert: CategoryFeedItemsUpsertWithNestedWhereUniqueInput

  """Connect existing CategoryFeedItems document"""
  connect: CategoryFeedItemsWhereUniqueInput

  """Disconnect currently connected CategoryFeedItems document"""
  disconnect: Boolean

  """Delete currently connected CategoryFeedItems document"""
  delete: Boolean
}

input CategoryFeedItemsUpdateWithNestedWhereUniqueInput {
  FeedItem: FeedItemUpdateWithNestedWhereUniqueInput
}

input CategoryFeedItemsUpsertWithNestedWhereUniqueInput {
  FeedItem: FeedItemUpsertWithNestedWhereUniqueInput
}

input CategoryFeedItemsWhereInput {
  FeedItem: FeedItemWhereInput
}

input CategoryFeedItemsWhereUniqueInput {
  FeedItem: FeedItemWhereUniqueInput
}

"""Identifies documents"""
input CategoryManyWhereInput {
  """Contains search across all appropriate fields."""
  _search: String

  """Logical AND on all given filters."""
  AND: [CategoryWhereInput!]

  """Logical OR on all given filters."""
  OR: [CategoryWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [CategoryWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string"""
  id_not_ends_with: ID
  createdAt: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updatedAt: DateTime

  """All values that are not equal to given value."""
  updatedAt_not: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  publishedAt: DateTime

  """All values that are not equal to given value."""
  publishedAt_not: DateTime

  """All values that are contained in given list."""
  publishedAt_in: [DateTime!]

  """All values that are not contained in given list."""
  publishedAt_not_in: [DateTime!]

  """All values less than the given value."""
  publishedAt_lt: DateTime

  """All values less than or equal the given value."""
  publishedAt_lte: DateTime

  """All values greater than the given value."""
  publishedAt_gt: DateTime

  """All values greater than or equal the given value."""
  publishedAt_gte: DateTime
  title: String

  """All values that are not equal to given value."""
  title_not: String

  """All values that are contained in given list."""
  title_in: [String!]

  """All values that are not contained in given list."""
  title_not_in: [String!]

  """All values containing the given string."""
  title_contains: String

  """All values not containing the given string."""
  title_not_contains: String

  """All values starting with the given string."""
  title_starts_with: String

  """All values not starting with the given string."""
  title_not_starts_with: String

  """All values ending with the given string."""
  title_ends_with: String

  """All values not ending with the given string"""
  title_not_ends_with: String
  createdBy: UserWhereInput
  updatedBy: UserWhereInput
  publishedBy: UserWhereInput
  mainImage: AssetWhereInput
  categoryTitle: CategoryTitle

  """All values that are not equal to given value."""
  categoryTitle_not: CategoryTitle

  """All values that are contained in given list."""
  categoryTitle_in: [CategoryTitle!]

  """All values that are not contained in given list."""
  categoryTitle_not_in: [CategoryTitle!]
}

enum CategoryOrderByInput {
  id_ASC
  id_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  publishedAt_ASC
  publishedAt_DESC
  title_ASC
  title_DESC
  categoryTitle_ASC
  categoryTitle_DESC
}

enum CategoryTitle {
  Exercises
  Testimonials
}

input CategoryUpdateInput {
  title: String
  mainImage: AssetUpdateOneInlineInput
  categoryTitle: CategoryTitle
  feedItems: CategoryFeedItemsUpdateManyInlineInput
}

input CategoryUpdateManyInlineInput {
  """Create and connect multiple Category documents"""
  create: [CategoryCreateInput!]

  """Connect multiple existing Category documents"""
  connect: [CategoryConnectInput!]

  """
  Override currently-connected documents with multiple existing Category documents
  """
  set: [CategoryWhereUniqueInput!]

  """Update multiple Category documents"""
  updateIt: [CategoryUpdateWithNestedWhereUniqueInput!]

  """Upsert multiple Category documents"""
  upsert: [CategoryUpsertWithNestedWhereUniqueInput!]

  """Disconnect multiple Category documents"""
  disconnect: [CategoryWhereUniqueInput!]

  """Delete multiple Category documents"""
  delete: [CategoryWhereUniqueInput!]
}

input CategoryUpdateManyInput {
  title: String
  categoryTitle: CategoryTitle
}

input CategoryUpdateManyWithNestedWhereInput {
  """Document search"""
  where: CategoryWhereInput!

  """Update many input"""
  data: CategoryUpdateManyInput!
}

input CategoryUpdateOneInlineInput {
  """Create and connect one Category document"""
  create: CategoryCreateInput

  """Update single Category document"""
  updateIt: CategoryUpdateWithNestedWhereUniqueInput

  """Upsert single Category document"""
  upsert: CategoryUpsertWithNestedWhereUniqueInput

  """Connect existing Category document"""
  connect: CategoryWhereUniqueInput

  """Disconnect currently connected Category document"""
  disconnect: Boolean

  """Delete currently connected Category document"""
  delete: Boolean
}

input CategoryUpdateWithNestedWhereUniqueInput {
  """Unique document search"""
  where: CategoryWhereUniqueInput!

  """Document to update"""
  data: CategoryUpdateInput!
}

input CategoryUpsertInput {
  """Create document if it didn't exist"""
  create: CategoryCreateInput!

  """Update document if it exists"""
  updateIt: CategoryUpdateInput!
}

input CategoryUpsertWithNestedWhereUniqueInput {
  """Unique document search"""
  where: CategoryWhereUniqueInput!

  """Upsert data"""
  data: CategoryUpsertInput!
}

"""Identifies documents"""
input CategoryWhereInput {
  """Contains search across all appropriate fields."""
  _search: String

  """Logical AND on all given filters."""
  AND: [CategoryWhereInput!]

  """Logical OR on all given filters."""
  OR: [CategoryWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [CategoryWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string"""
  id_not_ends_with: ID
  createdAt: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updatedAt: DateTime

  """All values that are not equal to given value."""
  updatedAt_not: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  publishedAt: DateTime

  """All values that are not equal to given value."""
  publishedAt_not: DateTime

  """All values that are contained in given list."""
  publishedAt_in: [DateTime!]

  """All values that are not contained in given list."""
  publishedAt_not_in: [DateTime!]

  """All values less than the given value."""
  publishedAt_lt: DateTime

  """All values less than or equal the given value."""
  publishedAt_lte: DateTime

  """All values greater than the given value."""
  publishedAt_gt: DateTime

  """All values greater than or equal the given value."""
  publishedAt_gte: DateTime
  title: String

  """All values that are not equal to given value."""
  title_not: String

  """All values that are contained in given list."""
  title_in: [String!]

  """All values that are not contained in given list."""
  title_not_in: [String!]

  """All values containing the given string."""
  title_contains: String

  """All values not containing the given string."""
  title_not_contains: String

  """All values starting with the given string."""
  title_starts_with: String

  """All values not starting with the given string."""
  title_not_starts_with: String

  """All values ending with the given string."""
  title_ends_with: String

  """All values not ending with the given string"""
  title_not_ends_with: String
  createdBy: UserWhereInput
  updatedBy: UserWhereInput
  publishedBy: UserWhereInput
  mainImage: AssetWhereInput
  categoryTitle: CategoryTitle

  """All values that are not equal to given value."""
  categoryTitle_not: CategoryTitle

  """All values that are contained in given list."""
  categoryTitle_in: [CategoryTitle!]

  """All values that are not contained in given list."""
  categoryTitle_not_in: [CategoryTitle!]
}

"""References Category record uniquely"""
input CategoryWhereUniqueInput {
  id: ID
}

"""
Representing a color value comprising of HEX, RGBA and css color values
"""
type Color {
  hex: Hex!
  rgba: RGBA!
  css: String!
}

"""
Accepts either HEX or RGBA color value. At least one of hex or rgba value should be passed. If both are passed RGBA is used.
"""
input ColorInput {
  hex: Hex
  rgba: RGBAInput
}

input ConnectPositionInput {
  """Connect document after specified document"""
  after: ID

  """Connect document before specified document"""
  before: ID

  """Connect document at first position"""
  start: Boolean

  """Connect document at last position"""
  end: Boolean
}

"""what cycle you are on (1, 2 or 3)"""
enum Cycle {
  one
  two
  three
}

"""
A date string, such as 2007-12-03 (YYYY-MM-DD), compliant with ISO 8601 standard
for representation of dates using the Gregorian calendar.
"""
scalar Date

"""
A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the
date-timeformat outlined in section 5.6 of the RFC 3339 profile of the ISO 8601
standard for representationof dates and times using the Gregorian calendar.
"""
scalar DateTime

enum DocumentFileTypes {
  jpg
  odp
  ods
  odt
  png
  svg
  txt
  webp
  docx
  pdf
  html
  doc
  xlsx
  xls
  pptx
  ppt
}

input DocumentOutputInput {
  """
  Transforms a document into a desired file type.
  See this matrix for format support:
  
  PDF:	jpg, odp, ods, odt, png, svg, txt, and webp
  DOC:	docx, html, jpg, odt, pdf, png, svg, txt, and webp
  DOCX:	doc, html, jpg, odt, pdf, png, svg, txt, and webp
  ODT:	doc, docx, html, jpg, pdf, png, svg, txt, and webp
  XLS:	jpg, pdf, ods, png, svg, xlsx, and webp
  XLSX:	jpg, pdf, ods, png, svg, xls, and webp
  ODS:	jpg, pdf, png, xls, svg, xlsx, and webp
  PPT:	jpg, odp, pdf, png, svg, pptx, and webp
  PPTX:	jpg, odp, pdf, png, svg, ppt, and webp
  ODP:	jpg, pdf, png, ppt, svg, pptx, and webp
  BMP:	jpg, odp, ods, odt, pdf, png, svg, and webp
  GIF:	jpg, odp, ods, odt, pdf, png, svg, and webp
  JPG:	jpg, odp, ods, odt, pdf, png, svg, and webp
  PNG:	jpg, odp, ods, odt, pdf, png, svg, and webp
  WEBP:	jpg, odp, ods, odt, pdf, png, svg, and webp
  TIFF:	jpg, odp, ods, odt, pdf, png, svg, and webp
  AI:	    jpg, odp, ods, odt, pdf, png, svg, and webp
  PSD:	jpg, odp, ods, odt, pdf, png, svg, and webp
  SVG:	jpg, odp, ods, odt, pdf, png, and webp
  HTML:	jpg, odt, pdf, svg, txt, and webp
  TXT:	jpg, html, odt, pdf, svg, and webp
  """
  format: DocumentFileTypes
}

"""Transformations for Documents"""
input DocumentTransformationInput {
  """Changes the output for the file."""
  output: DocumentOutputInput
}

type DocumentVersion {
  id: ID!
  stage: Stage!
  revision: Int!
  createdAt: DateTime!
  data: Json
}

type FeedItem implements Node {
  """System stage field"""
  stage: Stage!

  """Get the document in other stages"""
  documentInStages(
    """Potential stages that should be returned"""
    stages: [Stage!]! = [DRAFT, PUBLISHED]

    """Decides if the current stage should be included or not"""
    includeCurrent: Boolean! = false

    """
    Decides if the documents should match the parent documents locale or should use the fallback order defined in the tree
    """
    inheritLocale: Boolean! = false
  ): [FeedItem!]!

  """The unique identifier"""
  id: ID!

  """The time the document was created"""
  createdAt: DateTime!

  """The time the document was updated"""
  updatedAt: DateTime!

  """The time the document was published. Null on documents in draft stage."""
  publishedAt: DateTime
  title: String
  subtitle: String
  description: String
  mainContent: String

  """User that created this document"""
  createdBy(
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `createdBy` is a model without localized fields and will not be
    affected directly by this argument, however the locales will be passed on to
    any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first
    locale matching the provided list of locales will be returned, entries with
    non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): User

  """User that last updated this document"""
  updatedBy(
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `updatedBy` is a model without localized fields and will not be
    affected directly by this argument, however the locales will be passed on to
    any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first
    locale matching the provided list of locales will be returned, entries with
    non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): User

  """User that last published this document"""
  publishedBy(
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `publishedBy` is a model without localized fields and will not be
    affected directly by this argument, however the locales will be passed on to
    any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first
    locale matching the provided list of locales will be returned, entries with
    non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): User
  mainImage(
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `mainImage` is a model without localized fields and will not be
    affected directly by this argument, however the locales will be passed on to
    any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first
    locale matching the provided list of locales will be returned, entries with
    non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): Asset
  video(
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `video` is a model without localized fields and will not be
    affected directly by this argument, however the locales will be passed on to
    any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first
    locale matching the provided list of locales will be returned, entries with
    non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): Asset
  categories(
    skip: Int
    after: String
    before: String
    first: Int
    last: Int

    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `categories` is a model without localized fields and will not be
    affected directly by this argument, however the locales will be passed on to
    any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first
    locale matching the provided list of locales will be returned, entries with
    non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): [Category!]!

  """List of FeedItem versions"""
  history(
    limit: Int! = 10
    skip: Int! = 0

    """
    This is optional and can be used to fetch the document version history for a specific stage instead of the current one
    """
    stageOverride: Stage
  ): [Version!]!
}

type FeedItemCategory implements Node {
  """System stage field"""
  stage: Stage!

  """Get the document in other stages"""
  documentInStages(
    """Potential stages that should be returned"""
    stages: [Stage!]! = [DRAFT, PUBLISHED]

    """Decides if the current stage should be included or not"""
    includeCurrent: Boolean! = false

    """
    Decides if the documents should match the parent documents locale or should use the fallback order defined in the tree
    """
    inheritLocale: Boolean! = false
  ): [FeedItemCategory!]!

  """The unique identifier"""
  id: ID!

  """The time the document was created"""
  createdAt: DateTime!

  """The time the document was updated"""
  updatedAt: DateTime!

  """The time the document was published. Null on documents in draft stage."""
  publishedAt: DateTime
  title: String

  """User that created this document"""
  createdBy(
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `createdBy` is a model without localized fields and will not be
    affected directly by this argument, however the locales will be passed on to
    any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first
    locale matching the provided list of locales will be returned, entries with
    non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): User

  """User that last updated this document"""
  updatedBy(
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `updatedBy` is a model without localized fields and will not be
    affected directly by this argument, however the locales will be passed on to
    any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first
    locale matching the provided list of locales will be returned, entries with
    non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): User

  """User that last published this document"""
  publishedBy(
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `publishedBy` is a model without localized fields and will not be
    affected directly by this argument, however the locales will be passed on to
    any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first
    locale matching the provided list of locales will be returned, entries with
    non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): User
  mainImage(
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `mainImage` is a model without localized fields and will not be
    affected directly by this argument, however the locales will be passed on to
    any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first
    locale matching the provided list of locales will be returned, entries with
    non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): Asset!
  categoryTitle: CategoryTitle

  """List of FeedItemCategory versions"""
  history(
    limit: Int! = 10
    skip: Int! = 0

    """
    This is optional and can be used to fetch the document version history for a specific stage instead of the current one
    """
    stageOverride: Stage
  ): [Version!]!
}

input FeedItemCategoryConnectInput {
  """Document to connect"""
  where: FeedItemCategoryWhereUniqueInput!

  """
  Allow to specify document position in list of connected documents, will default to appending at end of list
  """
  position: ConnectPositionInput
}

"""A connection to a list of items."""
type FeedItemCategoryConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [FeedItemCategoryEdge!]!
  aggregate: Aggregate!
}

input FeedItemCategoryCreateInput {
  createdAt: DateTime
  updatedAt: DateTime
  title: String
  mainImage: AssetCreateOneInlineInput!
  categoryTitle: CategoryTitle
}

input FeedItemCategoryCreateManyInlineInput {
  """Create and connect multiple existing FeedItemCategory documents"""
  create: [FeedItemCategoryCreateInput!]

  """Connect multiple existing FeedItemCategory documents"""
  connect: [FeedItemCategoryWhereUniqueInput!]
}

input FeedItemCategoryCreateOneInlineInput {
  """Create and connect one FeedItemCategory document"""
  create: FeedItemCategoryCreateInput

  """Connect one existing FeedItemCategory document"""
  connect: FeedItemCategoryWhereUniqueInput
}

"""An edge in a connection."""
type FeedItemCategoryEdge {
  """The item at the end of the edge."""
  node: FeedItemCategory!

  """A cursor for use in pagination."""
  cursor: String!
}

"""Identifies documents"""
input FeedItemCategoryManyWhereInput {
  """Contains search across all appropriate fields."""
  _search: String

  """Logical AND on all given filters."""
  AND: [FeedItemCategoryWhereInput!]

  """Logical OR on all given filters."""
  OR: [FeedItemCategoryWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [FeedItemCategoryWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string"""
  id_not_ends_with: ID
  createdAt: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updatedAt: DateTime

  """All values that are not equal to given value."""
  updatedAt_not: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  publishedAt: DateTime

  """All values that are not equal to given value."""
  publishedAt_not: DateTime

  """All values that are contained in given list."""
  publishedAt_in: [DateTime!]

  """All values that are not contained in given list."""
  publishedAt_not_in: [DateTime!]

  """All values less than the given value."""
  publishedAt_lt: DateTime

  """All values less than or equal the given value."""
  publishedAt_lte: DateTime

  """All values greater than the given value."""
  publishedAt_gt: DateTime

  """All values greater than or equal the given value."""
  publishedAt_gte: DateTime
  title: String

  """All values that are not equal to given value."""
  title_not: String

  """All values that are contained in given list."""
  title_in: [String!]

  """All values that are not contained in given list."""
  title_not_in: [String!]

  """All values containing the given string."""
  title_contains: String

  """All values not containing the given string."""
  title_not_contains: String

  """All values starting with the given string."""
  title_starts_with: String

  """All values not starting with the given string."""
  title_not_starts_with: String

  """All values ending with the given string."""
  title_ends_with: String

  """All values not ending with the given string"""
  title_not_ends_with: String
  createdBy: UserWhereInput
  updatedBy: UserWhereInput
  publishedBy: UserWhereInput
  mainImage: AssetWhereInput
  categoryTitle: CategoryTitle

  """All values that are not equal to given value."""
  categoryTitle_not: CategoryTitle

  """All values that are contained in given list."""
  categoryTitle_in: [CategoryTitle!]

  """All values that are not contained in given list."""
  categoryTitle_not_in: [CategoryTitle!]
}

enum FeedItemCategoryOrderByInput {
  id_ASC
  id_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  publishedAt_ASC
  publishedAt_DESC
  title_ASC
  title_DESC
  categoryTitle_ASC
  categoryTitle_DESC
}

input FeedItemCategoryUpdateInput {
  title: String
  mainImage: AssetUpdateOneInlineInput
  categoryTitle: CategoryTitle
}

input FeedItemCategoryUpdateManyInlineInput {
  """Create and connect multiple FeedItemCategory documents"""
  create: [FeedItemCategoryCreateInput!]

  """Connect multiple existing FeedItemCategory documents"""
  connect: [FeedItemCategoryConnectInput!]

  """
  Override currently-connected documents with multiple existing FeedItemCategory documents
  """
  set: [FeedItemCategoryWhereUniqueInput!]

  """Update multiple FeedItemCategory documents"""
  updateIt: [FeedItemCategoryUpdateWithNestedWhereUniqueInput!]

  """Upsert multiple FeedItemCategory documents"""
  upsert: [FeedItemCategoryUpsertWithNestedWhereUniqueInput!]

  """Disconnect multiple FeedItemCategory documents"""
  disconnect: [FeedItemCategoryWhereUniqueInput!]

  """Delete multiple FeedItemCategory documents"""
  delete: [FeedItemCategoryWhereUniqueInput!]
}

input FeedItemCategoryUpdateManyInput {
  title: String
  categoryTitle: CategoryTitle
}

input FeedItemCategoryUpdateManyWithNestedWhereInput {
  """Document search"""
  where: FeedItemCategoryWhereInput!

  """Update many input"""
  data: FeedItemCategoryUpdateManyInput!
}

input FeedItemCategoryUpdateOneInlineInput {
  """Create and connect one FeedItemCategory document"""
  create: FeedItemCategoryCreateInput

  """Update single FeedItemCategory document"""
  updateIt: FeedItemCategoryUpdateWithNestedWhereUniqueInput

  """Upsert single FeedItemCategory document"""
  upsert: FeedItemCategoryUpsertWithNestedWhereUniqueInput

  """Connect existing FeedItemCategory document"""
  connect: FeedItemCategoryWhereUniqueInput

  """Disconnect currently connected FeedItemCategory document"""
  disconnect: Boolean

  """Delete currently connected FeedItemCategory document"""
  delete: Boolean
}

input FeedItemCategoryUpdateWithNestedWhereUniqueInput {
  """Unique document search"""
  where: FeedItemCategoryWhereUniqueInput!

  """Document to update"""
  data: FeedItemCategoryUpdateInput!
}

input FeedItemCategoryUpsertInput {
  """Create document if it didn't exist"""
  create: FeedItemCategoryCreateInput!

  """Update document if it exists"""
  updateIt: FeedItemCategoryUpdateInput!
}

input FeedItemCategoryUpsertWithNestedWhereUniqueInput {
  """Unique document search"""
  where: FeedItemCategoryWhereUniqueInput!

  """Upsert data"""
  data: FeedItemCategoryUpsertInput!
}

"""Identifies documents"""
input FeedItemCategoryWhereInput {
  """Contains search across all appropriate fields."""
  _search: String

  """Logical AND on all given filters."""
  AND: [FeedItemCategoryWhereInput!]

  """Logical OR on all given filters."""
  OR: [FeedItemCategoryWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [FeedItemCategoryWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string"""
  id_not_ends_with: ID
  createdAt: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updatedAt: DateTime

  """All values that are not equal to given value."""
  updatedAt_not: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  publishedAt: DateTime

  """All values that are not equal to given value."""
  publishedAt_not: DateTime

  """All values that are contained in given list."""
  publishedAt_in: [DateTime!]

  """All values that are not contained in given list."""
  publishedAt_not_in: [DateTime!]

  """All values less than the given value."""
  publishedAt_lt: DateTime

  """All values less than or equal the given value."""
  publishedAt_lte: DateTime

  """All values greater than the given value."""
  publishedAt_gt: DateTime

  """All values greater than or equal the given value."""
  publishedAt_gte: DateTime
  title: String

  """All values that are not equal to given value."""
  title_not: String

  """All values that are contained in given list."""
  title_in: [String!]

  """All values that are not contained in given list."""
  title_not_in: [String!]

  """All values containing the given string."""
  title_contains: String

  """All values not containing the given string."""
  title_not_contains: String

  """All values starting with the given string."""
  title_starts_with: String

  """All values not starting with the given string."""
  title_not_starts_with: String

  """All values ending with the given string."""
  title_ends_with: String

  """All values not ending with the given string"""
  title_not_ends_with: String
  createdBy: UserWhereInput
  updatedBy: UserWhereInput
  publishedBy: UserWhereInput
  mainImage: AssetWhereInput
  categoryTitle: CategoryTitle

  """All values that are not equal to given value."""
  categoryTitle_not: CategoryTitle

  """All values that are contained in given list."""
  categoryTitle_in: [CategoryTitle!]

  """All values that are not contained in given list."""
  categoryTitle_not_in: [CategoryTitle!]
}

"""References FeedItemCategory record uniquely"""
input FeedItemCategoryWhereUniqueInput {
  id: ID
}

input FeedItemConnectInput {
  """Document to connect"""
  where: FeedItemWhereUniqueInput!

  """
  Allow to specify document position in list of connected documents, will default to appending at end of list
  """
  position: ConnectPositionInput
}

"""A connection to a list of items."""
type FeedItemConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [FeedItemEdge!]!
  aggregate: Aggregate!
}

input FeedItemCreateInput {
  createdAt: DateTime
  updatedAt: DateTime
  title: String
  subtitle: String
  description: String
  mainContent: String
  mainImage: AssetCreateOneInlineInput
  video: AssetCreateOneInlineInput
  categories: CategoryCreateManyInlineInput
}

input FeedItemCreateManyInlineInput {
  """Create and connect multiple existing FeedItem documents"""
  create: [FeedItemCreateInput!]

  """Connect multiple existing FeedItem documents"""
  connect: [FeedItemWhereUniqueInput!]
}

input FeedItemCreateOneInlineInput {
  """Create and connect one FeedItem document"""
  create: FeedItemCreateInput

  """Connect one existing FeedItem document"""
  connect: FeedItemWhereUniqueInput
}

"""An edge in a connection."""
type FeedItemEdge {
  """The item at the end of the edge."""
  node: FeedItem!

  """A cursor for use in pagination."""
  cursor: String!
}

"""Identifies documents"""
input FeedItemManyWhereInput {
  """Contains search across all appropriate fields."""
  _search: String

  """Logical AND on all given filters."""
  AND: [FeedItemWhereInput!]

  """Logical OR on all given filters."""
  OR: [FeedItemWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [FeedItemWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string"""
  id_not_ends_with: ID
  createdAt: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updatedAt: DateTime

  """All values that are not equal to given value."""
  updatedAt_not: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  publishedAt: DateTime

  """All values that are not equal to given value."""
  publishedAt_not: DateTime

  """All values that are contained in given list."""
  publishedAt_in: [DateTime!]

  """All values that are not contained in given list."""
  publishedAt_not_in: [DateTime!]

  """All values less than the given value."""
  publishedAt_lt: DateTime

  """All values less than or equal the given value."""
  publishedAt_lte: DateTime

  """All values greater than the given value."""
  publishedAt_gt: DateTime

  """All values greater than or equal the given value."""
  publishedAt_gte: DateTime
  title: String

  """All values that are not equal to given value."""
  title_not: String

  """All values that are contained in given list."""
  title_in: [String!]

  """All values that are not contained in given list."""
  title_not_in: [String!]

  """All values containing the given string."""
  title_contains: String

  """All values not containing the given string."""
  title_not_contains: String

  """All values starting with the given string."""
  title_starts_with: String

  """All values not starting with the given string."""
  title_not_starts_with: String

  """All values ending with the given string."""
  title_ends_with: String

  """All values not ending with the given string"""
  title_not_ends_with: String
  subtitle: String

  """All values that are not equal to given value."""
  subtitle_not: String

  """All values that are contained in given list."""
  subtitle_in: [String!]

  """All values that are not contained in given list."""
  subtitle_not_in: [String!]

  """All values containing the given string."""
  subtitle_contains: String

  """All values not containing the given string."""
  subtitle_not_contains: String

  """All values starting with the given string."""
  subtitle_starts_with: String

  """All values not starting with the given string."""
  subtitle_not_starts_with: String

  """All values ending with the given string."""
  subtitle_ends_with: String

  """All values not ending with the given string"""
  subtitle_not_ends_with: String
  description: String

  """All values that are not equal to given value."""
  description_not: String

  """All values that are contained in given list."""
  description_in: [String!]

  """All values that are not contained in given list."""
  description_not_in: [String!]

  """All values containing the given string."""
  description_contains: String

  """All values not containing the given string."""
  description_not_contains: String

  """All values starting with the given string."""
  description_starts_with: String

  """All values not starting with the given string."""
  description_not_starts_with: String

  """All values ending with the given string."""
  description_ends_with: String

  """All values not ending with the given string"""
  description_not_ends_with: String
  mainContent: String

  """All values that are not equal to given value."""
  mainContent_not: String

  """All values that are contained in given list."""
  mainContent_in: [String!]

  """All values that are not contained in given list."""
  mainContent_not_in: [String!]

  """All values containing the given string."""
  mainContent_contains: String

  """All values not containing the given string."""
  mainContent_not_contains: String

  """All values starting with the given string."""
  mainContent_starts_with: String

  """All values not starting with the given string."""
  mainContent_not_starts_with: String

  """All values ending with the given string."""
  mainContent_ends_with: String

  """All values not ending with the given string"""
  mainContent_not_ends_with: String
  createdBy: UserWhereInput
  updatedBy: UserWhereInput
  publishedBy: UserWhereInput
  mainImage: AssetWhereInput
  video: AssetWhereInput
  categories_every: CategoryWhereInput
  categories_some: CategoryWhereInput
  categories_none: CategoryWhereInput
}

enum FeedItemOrderByInput {
  id_ASC
  id_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  publishedAt_ASC
  publishedAt_DESC
  title_ASC
  title_DESC
  subtitle_ASC
  subtitle_DESC
  description_ASC
  description_DESC
  mainContent_ASC
  mainContent_DESC
}

input FeedItemUpdateInput {
  title: String
  subtitle: String
  description: String
  mainContent: String
  mainImage: AssetUpdateOneInlineInput
  video: AssetUpdateOneInlineInput
  categories: CategoryUpdateManyInlineInput
}

input FeedItemUpdateManyInlineInput {
  """Create and connect multiple FeedItem documents"""
  create: [FeedItemCreateInput!]

  """Connect multiple existing FeedItem documents"""
  connect: [FeedItemConnectInput!]

  """
  Override currently-connected documents with multiple existing FeedItem documents
  """
  set: [FeedItemWhereUniqueInput!]

  """Update multiple FeedItem documents"""
  updateIt: [FeedItemUpdateWithNestedWhereUniqueInput!]

  """Upsert multiple FeedItem documents"""
  upsert: [FeedItemUpsertWithNestedWhereUniqueInput!]

  """Disconnect multiple FeedItem documents"""
  disconnect: [FeedItemWhereUniqueInput!]

  """Delete multiple FeedItem documents"""
  delete: [FeedItemWhereUniqueInput!]
}

input FeedItemUpdateManyInput {
  title: String
  subtitle: String
  description: String
  mainContent: String
}

input FeedItemUpdateManyWithNestedWhereInput {
  """Document search"""
  where: FeedItemWhereInput!

  """Update many input"""
  data: FeedItemUpdateManyInput!
}

input FeedItemUpdateOneInlineInput {
  """Create and connect one FeedItem document"""
  create: FeedItemCreateInput

  """Update single FeedItem document"""
  updateIt: FeedItemUpdateWithNestedWhereUniqueInput

  """Upsert single FeedItem document"""
  upsert: FeedItemUpsertWithNestedWhereUniqueInput

  """Connect existing FeedItem document"""
  connect: FeedItemWhereUniqueInput

  """Disconnect currently connected FeedItem document"""
  disconnect: Boolean

  """Delete currently connected FeedItem document"""
  delete: Boolean
}

input FeedItemUpdateWithNestedWhereUniqueInput {
  """Unique document search"""
  where: FeedItemWhereUniqueInput!

  """Document to update"""
  data: FeedItemUpdateInput!
}

input FeedItemUpsertInput {
  """Create document if it didn't exist"""
  create: FeedItemCreateInput!

  """Update document if it exists"""
  updateIt: FeedItemUpdateInput!
}

input FeedItemUpsertWithNestedWhereUniqueInput {
  """Unique document search"""
  where: FeedItemWhereUniqueInput!

  """Upsert data"""
  data: FeedItemUpsertInput!
}

"""Identifies documents"""
input FeedItemWhereInput {
  """Contains search across all appropriate fields."""
  _search: String

  """Logical AND on all given filters."""
  AND: [FeedItemWhereInput!]

  """Logical OR on all given filters."""
  OR: [FeedItemWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [FeedItemWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string"""
  id_not_ends_with: ID
  createdAt: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updatedAt: DateTime

  """All values that are not equal to given value."""
  updatedAt_not: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  publishedAt: DateTime

  """All values that are not equal to given value."""
  publishedAt_not: DateTime

  """All values that are contained in given list."""
  publishedAt_in: [DateTime!]

  """All values that are not contained in given list."""
  publishedAt_not_in: [DateTime!]

  """All values less than the given value."""
  publishedAt_lt: DateTime

  """All values less than or equal the given value."""
  publishedAt_lte: DateTime

  """All values greater than the given value."""
  publishedAt_gt: DateTime

  """All values greater than or equal the given value."""
  publishedAt_gte: DateTime
  title: String

  """All values that are not equal to given value."""
  title_not: String

  """All values that are contained in given list."""
  title_in: [String!]

  """All values that are not contained in given list."""
  title_not_in: [String!]

  """All values containing the given string."""
  title_contains: String

  """All values not containing the given string."""
  title_not_contains: String

  """All values starting with the given string."""
  title_starts_with: String

  """All values not starting with the given string."""
  title_not_starts_with: String

  """All values ending with the given string."""
  title_ends_with: String

  """All values not ending with the given string"""
  title_not_ends_with: String
  subtitle: String

  """All values that are not equal to given value."""
  subtitle_not: String

  """All values that are contained in given list."""
  subtitle_in: [String!]

  """All values that are not contained in given list."""
  subtitle_not_in: [String!]

  """All values containing the given string."""
  subtitle_contains: String

  """All values not containing the given string."""
  subtitle_not_contains: String

  """All values starting with the given string."""
  subtitle_starts_with: String

  """All values not starting with the given string."""
  subtitle_not_starts_with: String

  """All values ending with the given string."""
  subtitle_ends_with: String

  """All values not ending with the given string"""
  subtitle_not_ends_with: String
  description: String

  """All values that are not equal to given value."""
  description_not: String

  """All values that are contained in given list."""
  description_in: [String!]

  """All values that are not contained in given list."""
  description_not_in: [String!]

  """All values containing the given string."""
  description_contains: String

  """All values not containing the given string."""
  description_not_contains: String

  """All values starting with the given string."""
  description_starts_with: String

  """All values not starting with the given string."""
  description_not_starts_with: String

  """All values ending with the given string."""
  description_ends_with: String

  """All values not ending with the given string"""
  description_not_ends_with: String
  mainContent: String

  """All values that are not equal to given value."""
  mainContent_not: String

  """All values that are contained in given list."""
  mainContent_in: [String!]

  """All values that are not contained in given list."""
  mainContent_not_in: [String!]

  """All values containing the given string."""
  mainContent_contains: String

  """All values not containing the given string."""
  mainContent_not_contains: String

  """All values starting with the given string."""
  mainContent_starts_with: String

  """All values not starting with the given string."""
  mainContent_not_starts_with: String

  """All values ending with the given string."""
  mainContent_ends_with: String

  """All values not ending with the given string"""
  mainContent_not_ends_with: String
  createdBy: UserWhereInput
  updatedBy: UserWhereInput
  publishedBy: UserWhereInput
  mainImage: AssetWhereInput
  video: AssetWhereInput
  categories_every: CategoryWhereInput
  categories_some: CategoryWhereInput
  categories_none: CategoryWhereInput
}

"""References FeedItem record uniquely"""
input FeedItemWhereUniqueInput {
  id: ID
}

scalar Hex

enum ImageFit {
  """
  Resizes the image to fit within the specified parameters without distorting, cropping, or changing the aspect ratio.
  """
  clip

  """
  Resizes the image to fit the specified parameters exactly by removing any
  parts of the image that don't fit within the boundaries.
  """
  crop

  """
  Resizes the image to fit the specified parameters exactly by scaling the image
  to the desired size. The aspect ratio of the image is not respected and the
  image can be distorted using this method.
  """
  scale

  """
  Resizes the image to fit within the parameters, but as opposed to 'fit:clip'
  will not scale the image if the image is smaller than the output size.
  """
  max
}

input ImageResizeInput {
  """
  The width in pixels to resize the image to. The value must be an integer from 1 to 10000.
  """
  width: Int

  """
  The height in pixels to resize the image to. The value must be an integer from 1 to 10000.
  """
  height: Int

  """The default value for the fit parameter is fit:clip."""
  fit: ImageFit
}

"""Transformations for Images"""
input ImageTransformationInput {
  """Resizes the image"""
  resize: ImageResizeInput
}

type InspirationItem implements Node {
  """System stage field"""
  stage: Stage!

  """Get the document in other stages"""
  documentInStages(
    """Potential stages that should be returned"""
    stages: [Stage!]! = [DRAFT, PUBLISHED]

    """Decides if the current stage should be included or not"""
    includeCurrent: Boolean! = false

    """
    Decides if the documents should match the parent documents locale or should use the fallback order defined in the tree
    """
    inheritLocale: Boolean! = false
  ): [InspirationItem!]!

  """The unique identifier"""
  id: ID!

  """The time the document was created"""
  createdAt: DateTime!

  """The time the document was updated"""
  updatedAt: DateTime!

  """The time the document was published. Null on documents in draft stage."""
  publishedAt: DateTime
  title: String

  """User that created this document"""
  createdBy(
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `createdBy` is a model without localized fields and will not be
    affected directly by this argument, however the locales will be passed on to
    any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first
    locale matching the provided list of locales will be returned, entries with
    non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): User

  """User that last updated this document"""
  updatedBy(
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `updatedBy` is a model without localized fields and will not be
    affected directly by this argument, however the locales will be passed on to
    any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first
    locale matching the provided list of locales will be returned, entries with
    non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): User

  """User that last published this document"""
  publishedBy(
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `publishedBy` is a model without localized fields and will not be
    affected directly by this argument, however the locales will be passed on to
    any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first
    locale matching the provided list of locales will be returned, entries with
    non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): User
  video(
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `video` is a model without localized fields and will not be
    affected directly by this argument, however the locales will be passed on to
    any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first
    locale matching the provided list of locales will be returned, entries with
    non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): Asset
  mainImage(
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `mainImage` is a model without localized fields and will not be
    affected directly by this argument, however the locales will be passed on to
    any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first
    locale matching the provided list of locales will be returned, entries with
    non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): Asset

  """List of InspirationItem versions"""
  history(
    limit: Int! = 10
    skip: Int! = 0

    """
    This is optional and can be used to fetch the document version history for a specific stage instead of the current one
    """
    stageOverride: Stage
  ): [Version!]!
}

input InspirationItemConnectInput {
  """Document to connect"""
  where: InspirationItemWhereUniqueInput!

  """
  Allow to specify document position in list of connected documents, will default to appending at end of list
  """
  position: ConnectPositionInput
}

"""A connection to a list of items."""
type InspirationItemConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [InspirationItemEdge!]!
  aggregate: Aggregate!
}

input InspirationItemCreateInput {
  createdAt: DateTime
  updatedAt: DateTime
  title: String
  video: AssetCreateOneInlineInput
  mainImage: AssetCreateOneInlineInput
}

input InspirationItemCreateManyInlineInput {
  """Create and connect multiple existing InspirationItem documents"""
  create: [InspirationItemCreateInput!]

  """Connect multiple existing InspirationItem documents"""
  connect: [InspirationItemWhereUniqueInput!]
}

input InspirationItemCreateOneInlineInput {
  """Create and connect one InspirationItem document"""
  create: InspirationItemCreateInput

  """Connect one existing InspirationItem document"""
  connect: InspirationItemWhereUniqueInput
}

"""An edge in a connection."""
type InspirationItemEdge {
  """The item at the end of the edge."""
  node: InspirationItem!

  """A cursor for use in pagination."""
  cursor: String!
}

"""Identifies documents"""
input InspirationItemManyWhereInput {
  """Contains search across all appropriate fields."""
  _search: String

  """Logical AND on all given filters."""
  AND: [InspirationItemWhereInput!]

  """Logical OR on all given filters."""
  OR: [InspirationItemWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [InspirationItemWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string"""
  id_not_ends_with: ID
  createdAt: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updatedAt: DateTime

  """All values that are not equal to given value."""
  updatedAt_not: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  publishedAt: DateTime

  """All values that are not equal to given value."""
  publishedAt_not: DateTime

  """All values that are contained in given list."""
  publishedAt_in: [DateTime!]

  """All values that are not contained in given list."""
  publishedAt_not_in: [DateTime!]

  """All values less than the given value."""
  publishedAt_lt: DateTime

  """All values less than or equal the given value."""
  publishedAt_lte: DateTime

  """All values greater than the given value."""
  publishedAt_gt: DateTime

  """All values greater than or equal the given value."""
  publishedAt_gte: DateTime
  title: String

  """All values that are not equal to given value."""
  title_not: String

  """All values that are contained in given list."""
  title_in: [String!]

  """All values that are not contained in given list."""
  title_not_in: [String!]

  """All values containing the given string."""
  title_contains: String

  """All values not containing the given string."""
  title_not_contains: String

  """All values starting with the given string."""
  title_starts_with: String

  """All values not starting with the given string."""
  title_not_starts_with: String

  """All values ending with the given string."""
  title_ends_with: String

  """All values not ending with the given string"""
  title_not_ends_with: String
  createdBy: UserWhereInput
  updatedBy: UserWhereInput
  publishedBy: UserWhereInput
  video: AssetWhereInput
  mainImage: AssetWhereInput
}

enum InspirationItemOrderByInput {
  id_ASC
  id_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  publishedAt_ASC
  publishedAt_DESC
  title_ASC
  title_DESC
}

input InspirationItemUpdateInput {
  title: String
  video: AssetUpdateOneInlineInput
  mainImage: AssetUpdateOneInlineInput
}

input InspirationItemUpdateManyInlineInput {
  """Create and connect multiple InspirationItem documents"""
  create: [InspirationItemCreateInput!]

  """Connect multiple existing InspirationItem documents"""
  connect: [InspirationItemConnectInput!]

  """
  Override currently-connected documents with multiple existing InspirationItem documents
  """
  set: [InspirationItemWhereUniqueInput!]

  """Update multiple InspirationItem documents"""
  updateIt: [InspirationItemUpdateWithNestedWhereUniqueInput!]

  """Upsert multiple InspirationItem documents"""
  upsert: [InspirationItemUpsertWithNestedWhereUniqueInput!]

  """Disconnect multiple InspirationItem documents"""
  disconnect: [InspirationItemWhereUniqueInput!]

  """Delete multiple InspirationItem documents"""
  delete: [InspirationItemWhereUniqueInput!]
}

input InspirationItemUpdateManyInput {
  title: String
}

input InspirationItemUpdateManyWithNestedWhereInput {
  """Document search"""
  where: InspirationItemWhereInput!

  """Update many input"""
  data: InspirationItemUpdateManyInput!
}

input InspirationItemUpdateOneInlineInput {
  """Create and connect one InspirationItem document"""
  create: InspirationItemCreateInput

  """Update single InspirationItem document"""
  updateIt: InspirationItemUpdateWithNestedWhereUniqueInput

  """Upsert single InspirationItem document"""
  upsert: InspirationItemUpsertWithNestedWhereUniqueInput

  """Connect existing InspirationItem document"""
  connect: InspirationItemWhereUniqueInput

  """Disconnect currently connected InspirationItem document"""
  disconnect: Boolean

  """Delete currently connected InspirationItem document"""
  delete: Boolean
}

input InspirationItemUpdateWithNestedWhereUniqueInput {
  """Unique document search"""
  where: InspirationItemWhereUniqueInput!

  """Document to update"""
  data: InspirationItemUpdateInput!
}

input InspirationItemUpsertInput {
  """Create document if it didn't exist"""
  create: InspirationItemCreateInput!

  """Update document if it exists"""
  updateIt: InspirationItemUpdateInput!
}

input InspirationItemUpsertWithNestedWhereUniqueInput {
  """Unique document search"""
  where: InspirationItemWhereUniqueInput!

  """Upsert data"""
  data: InspirationItemUpsertInput!
}

"""Identifies documents"""
input InspirationItemWhereInput {
  """Contains search across all appropriate fields."""
  _search: String

  """Logical AND on all given filters."""
  AND: [InspirationItemWhereInput!]

  """Logical OR on all given filters."""
  OR: [InspirationItemWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [InspirationItemWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string"""
  id_not_ends_with: ID
  createdAt: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updatedAt: DateTime

  """All values that are not equal to given value."""
  updatedAt_not: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  publishedAt: DateTime

  """All values that are not equal to given value."""
  publishedAt_not: DateTime

  """All values that are contained in given list."""
  publishedAt_in: [DateTime!]

  """All values that are not contained in given list."""
  publishedAt_not_in: [DateTime!]

  """All values less than the given value."""
  publishedAt_lt: DateTime

  """All values less than or equal the given value."""
  publishedAt_lte: DateTime

  """All values greater than the given value."""
  publishedAt_gt: DateTime

  """All values greater than or equal the given value."""
  publishedAt_gte: DateTime
  title: String

  """All values that are not equal to given value."""
  title_not: String

  """All values that are contained in given list."""
  title_in: [String!]

  """All values that are not contained in given list."""
  title_not_in: [String!]

  """All values containing the given string."""
  title_contains: String

  """All values not containing the given string."""
  title_not_contains: String

  """All values starting with the given string."""
  title_starts_with: String

  """All values not starting with the given string."""
  title_not_starts_with: String

  """All values ending with the given string."""
  title_ends_with: String

  """All values not ending with the given string"""
  title_not_ends_with: String
  createdBy: UserWhereInput
  updatedBy: UserWhereInput
  publishedBy: UserWhereInput
  video: AssetWhereInput
  mainImage: AssetWhereInput
}

"""References InspirationItem record uniquely"""
input InspirationItemWhereUniqueInput {
  id: ID
}

"""Raw JSON value"""
scalar Json

"""level of fitness"""
enum Level {
  beginner
  intermediate
  advanced
}

"""Locale system enumeration"""
enum Locale {
  """System locale"""
  en
}

"""Representing a geolocation point with latitude and longitude"""
type Location {
  latitude: Float!
  longitude: Float!
  distance(from: LocationInput!): Float!
}

"""Input for a geolocation point with latitude and longitude"""
input LocationInput {
  latitude: Float!
  longitude: Float!
}

"""
The Long scalar type represents non-fractional signed whole numeric values. Long
can represent values between -(2^63) and 2^63 - 1.
"""
scalar Long

enum MealSize {
  General
  Refuel
  Snack
}

enum MealType {
  Vegetarian
  Mixed
  Vegan
  Pescatarian
}

type Mutation {
  """Create one asset"""
  createAsset(data: AssetCreateInput!): Asset @deprecated(reason: "Asset mutations will be overhauled soon")

  """Update one asset"""
  updateAsset(where: AssetWhereUniqueInput!, data: AssetUpdateInput!): Asset

  """Delete one asset from _all_ existing stages. Returns deleted document."""
  deleteAsset(
    """Document to delete"""
    where: AssetWhereUniqueInput!
  ): Asset

  """Upsert one asset"""
  upsertAsset(where: AssetWhereUniqueInput!, upsert: AssetUpsertInput!): Asset

  """Publish one asset"""
  publishAsset(
    """Document to publish"""
    where: AssetWhereUniqueInput!

    """Optional localizations to publish"""
    locales: [Locale!]

    """Whether to publish the base document"""
    publishBase: Boolean = true

    """Whether to include the default locale when publishBase is set"""
    withDefaultLocale: Boolean = true

    """Publishing target stage"""
    to: [Stage!]! = [PUBLISHED]
  ): Asset

  """
  Unpublish one asset from selected stages. Unpublish either the complete
  document with its relations, localizations and base data or specific
  localizations only.
  """
  unpublishAsset(
    """Document to unpublish"""
    where: AssetWhereUniqueInput!

    """Stages to unpublish document from"""
    from: [Stage!]! = [PUBLISHED]

    """
    Optional locales to unpublish. Unpublishing the default locale will
    completely remove the document from the selected stages
    """
    locales: [Locale!]

    """
    Unpublish complete document including default localization and relations from stages. Can be disabled.
    """
    unpublishBase: Boolean = true
  ): Asset

  """Update many Asset documents"""
  updateManyAssetsConnection(
    """Documents to apply update on"""
    where: AssetManyWhereInput

    """Updates to document content"""
    data: AssetUpdateManyInput!
    skip: Int
    first: Int
    last: Int
    before: ID
    after: ID
  ): AssetConnection!

  """Delete many Asset documents, return deleted documents"""
  deleteManyAssetsConnection(
    """Documents to delete"""
    where: AssetManyWhereInput
    skip: Int
    first: Int
    last: Int
    before: ID
    after: ID
  ): AssetConnection!

  """Publish many Asset documents"""
  publishManyAssetsConnection(
    """Identifies documents in each stage to be published"""
    where: AssetManyWhereInput

    """Stage to find matching documents in"""
    from: Stage = DRAFT

    """Stages to publish documents to"""
    to: [Stage!]! = [PUBLISHED]
    skip: Int
    first: Int
    last: Int
    before: ID
    after: ID

    """Document localizations to publish"""
    locales: [Locale!]

    """Whether to publish the base document"""
    publishBase: Boolean = true

    """Whether to include the default locale when publishBase is true"""
    withDefaultLocale: Boolean = true
  ): AssetConnection!

  """
  Find many Asset documents that match criteria in specified stage and unpublish from target stages
  """
  unpublishManyAssetsConnection(
    """Identifies documents in draft stage"""
    where: AssetManyWhereInput

    """Stage to find matching documents in"""
    stage: Stage = DRAFT

    """Stages to unpublish documents from"""
    from: [Stage!]! = [PUBLISHED]
    skip: Int
    first: Int
    last: Int
    before: ID
    after: ID

    """Locales to unpublish"""
    locales: [Locale!]

    """Whether to unpublish the base document and default localization"""
    unpublishBase: Boolean = true
  ): AssetConnection!

  """Update many assets"""
  updateManyAssets(
    """Documents to apply update on"""
    where: AssetManyWhereInput

    """Updates to document content"""
    data: AssetUpdateManyInput!
  ): BatchPayload! @deprecated(reason: "Please use the new paginated many mutation (updateManyAssetsConnection)")

  """Delete many Asset documents"""
  deleteManyAssets(
    """Documents to delete"""
    where: AssetManyWhereInput
  ): BatchPayload! @deprecated(reason: "Please use the new paginated many mutation (deleteManyAssetsConnection)")

  """Publish many Asset documents"""
  publishManyAssets(
    """Identifies documents in each stage to be published"""
    where: AssetManyWhereInput

    """Stages to publish documents to"""
    to: [Stage!]! = [PUBLISHED]

    """Document localizations to publish"""
    locales: [Locale!]

    """Whether to publish the base document"""
    publishBase: Boolean = true

    """Whether to include the default locale when publishBase is true"""
    withDefaultLocale: Boolean = true
  ): BatchPayload! @deprecated(reason: "Please use the new paginated many mutation (publishManyAssetsConnection)")

  """Unpublish many Asset documents"""
  unpublishManyAssets(
    """Identifies documents in each stage"""
    where: AssetManyWhereInput

    """Stages to unpublish documents from"""
    from: [Stage!]! = [PUBLISHED]

    """Locales to unpublish"""
    locales: [Locale!]

    """Whether to unpublish the base document and default localization"""
    unpublishBase: Boolean = true
  ): BatchPayload! @deprecated(reason: "Please use the new paginated many mutation (unpublishManyAssetsConnection)")

  """Create one feedItem"""
  createFeedItem(data: FeedItemCreateInput!): FeedItem

  """Update one feedItem"""
  updateFeedItem(where: FeedItemWhereUniqueInput!, data: FeedItemUpdateInput!): FeedItem

  """
  Delete one feedItem from _all_ existing stages. Returns deleted document.
  """
  deleteFeedItem(
    """Document to delete"""
    where: FeedItemWhereUniqueInput!
  ): FeedItem

  """Upsert one feedItem"""
  upsertFeedItem(where: FeedItemWhereUniqueInput!, upsert: FeedItemUpsertInput!): FeedItem

  """Publish one feedItem"""
  publishFeedItem(
    """Document to publish"""
    where: FeedItemWhereUniqueInput!

    """Publishing target stage"""
    to: [Stage!]! = [PUBLISHED]
  ): FeedItem

  """
  Unpublish one feedItem from selected stages. Unpublish either the complete
  document with its relations, localizations and base data or specific
  localizations only.
  """
  unpublishFeedItem(
    """Document to unpublish"""
    where: FeedItemWhereUniqueInput!

    """Stages to unpublish document from"""
    from: [Stage!]! = [PUBLISHED]
  ): FeedItem

  """Update many FeedItem documents"""
  updateManyFeedItemsConnection(
    """Documents to apply update on"""
    where: FeedItemManyWhereInput

    """Updates to document content"""
    data: FeedItemUpdateManyInput!
    skip: Int
    first: Int
    last: Int
    before: ID
    after: ID
  ): FeedItemConnection!

  """Delete many FeedItem documents, return deleted documents"""
  deleteManyFeedItemsConnection(
    """Documents to delete"""
    where: FeedItemManyWhereInput
    skip: Int
    first: Int
    last: Int
    before: ID
    after: ID
  ): FeedItemConnection!

  """Publish many FeedItem documents"""
  publishManyFeedItemsConnection(
    """Identifies documents in each stage to be published"""
    where: FeedItemManyWhereInput

    """Stage to find matching documents in"""
    from: Stage = DRAFT

    """Stages to publish documents to"""
    to: [Stage!]! = [PUBLISHED]
    skip: Int
    first: Int
    last: Int
    before: ID
    after: ID
  ): FeedItemConnection!

  """
  Find many FeedItem documents that match criteria in specified stage and unpublish from target stages
  """
  unpublishManyFeedItemsConnection(
    """Identifies documents in draft stage"""
    where: FeedItemManyWhereInput

    """Stage to find matching documents in"""
    stage: Stage = DRAFT

    """Stages to unpublish documents from"""
    from: [Stage!]! = [PUBLISHED]
    skip: Int
    first: Int
    last: Int
    before: ID
    after: ID
  ): FeedItemConnection!

  """Update many feedItems"""
  updateManyFeedItems(
    """Documents to apply update on"""
    where: FeedItemManyWhereInput

    """Updates to document content"""
    data: FeedItemUpdateManyInput!
  ): BatchPayload! @deprecated(reason: "Please use the new paginated many mutation (updateManyFeedItemsConnection)")

  """Delete many FeedItem documents"""
  deleteManyFeedItems(
    """Documents to delete"""
    where: FeedItemManyWhereInput
  ): BatchPayload! @deprecated(reason: "Please use the new paginated many mutation (deleteManyFeedItemsConnection)")

  """Publish many FeedItem documents"""
  publishManyFeedItems(
    """Identifies documents in each stage to be published"""
    where: FeedItemManyWhereInput

    """Stages to publish documents to"""
    to: [Stage!]! = [PUBLISHED]
  ): BatchPayload! @deprecated(reason: "Please use the new paginated many mutation (publishManyFeedItemsConnection)")

  """Unpublish many FeedItem documents"""
  unpublishManyFeedItems(
    """Identifies documents in each stage"""
    where: FeedItemManyWhereInput

    """Stages to unpublish documents from"""
    from: [Stage!]! = [PUBLISHED]
  ): BatchPayload! @deprecated(reason: "Please use the new paginated many mutation (unpublishManyFeedItemsConnection)")

  """Create one inspirationItem"""
  createInspirationItem(data: InspirationItemCreateInput!): InspirationItem

  """Update one inspirationItem"""
  updateInspirationItem(where: InspirationItemWhereUniqueInput!, data: InspirationItemUpdateInput!): InspirationItem

  """
  Delete one inspirationItem from _all_ existing stages. Returns deleted document.
  """
  deleteInspirationItem(
    """Document to delete"""
    where: InspirationItemWhereUniqueInput!
  ): InspirationItem

  """Upsert one inspirationItem"""
  upsertInspirationItem(where: InspirationItemWhereUniqueInput!, upsert: InspirationItemUpsertInput!): InspirationItem

  """Publish one inspirationItem"""
  publishInspirationItem(
    """Document to publish"""
    where: InspirationItemWhereUniqueInput!

    """Publishing target stage"""
    to: [Stage!]! = [PUBLISHED]
  ): InspirationItem

  """
  Unpublish one inspirationItem from selected stages. Unpublish either the
  complete document with its relations, localizations and base data or specific
  localizations only.
  """
  unpublishInspirationItem(
    """Document to unpublish"""
    where: InspirationItemWhereUniqueInput!

    """Stages to unpublish document from"""
    from: [Stage!]! = [PUBLISHED]
  ): InspirationItem

  """Update many InspirationItem documents"""
  updateManyInspirationItemsConnection(
    """Documents to apply update on"""
    where: InspirationItemManyWhereInput

    """Updates to document content"""
    data: InspirationItemUpdateManyInput!
    skip: Int
    first: Int
    last: Int
    before: ID
    after: ID
  ): InspirationItemConnection!

  """Delete many InspirationItem documents, return deleted documents"""
  deleteManyInspirationItemsConnection(
    """Documents to delete"""
    where: InspirationItemManyWhereInput
    skip: Int
    first: Int
    last: Int
    before: ID
    after: ID
  ): InspirationItemConnection!

  """Publish many InspirationItem documents"""
  publishManyInspirationItemsConnection(
    """Identifies documents in each stage to be published"""
    where: InspirationItemManyWhereInput

    """Stage to find matching documents in"""
    from: Stage = DRAFT

    """Stages to publish documents to"""
    to: [Stage!]! = [PUBLISHED]
    skip: Int
    first: Int
    last: Int
    before: ID
    after: ID
  ): InspirationItemConnection!

  """
  Find many InspirationItem documents that match criteria in specified stage and unpublish from target stages
  """
  unpublishManyInspirationItemsConnection(
    """Identifies documents in draft stage"""
    where: InspirationItemManyWhereInput

    """Stage to find matching documents in"""
    stage: Stage = DRAFT

    """Stages to unpublish documents from"""
    from: [Stage!]! = [PUBLISHED]
    skip: Int
    first: Int
    last: Int
    before: ID
    after: ID
  ): InspirationItemConnection!

  """Update many inspirationItems"""
  updateManyInspirationItems(
    """Documents to apply update on"""
    where: InspirationItemManyWhereInput

    """Updates to document content"""
    data: InspirationItemUpdateManyInput!
  ): BatchPayload! @deprecated(reason: "Please use the new paginated many mutation (updateManyInspirationItemsConnection)")

  """Delete many InspirationItem documents"""
  deleteManyInspirationItems(
    """Documents to delete"""
    where: InspirationItemManyWhereInput
  ): BatchPayload! @deprecated(reason: "Please use the new paginated many mutation (deleteManyInspirationItemsConnection)")

  """Publish many InspirationItem documents"""
  publishManyInspirationItems(
    """Identifies documents in each stage to be published"""
    where: InspirationItemManyWhereInput

    """Stages to publish documents to"""
    to: [Stage!]! = [PUBLISHED]
  ): BatchPayload! @deprecated(reason: "Please use the new paginated many mutation (publishManyInspirationItemsConnection)")

  """Unpublish many InspirationItem documents"""
  unpublishManyInspirationItems(
    """Identifies documents in each stage"""
    where: InspirationItemManyWhereInput

    """Stages to unpublish documents from"""
    from: [Stage!]! = [PUBLISHED]
  ): BatchPayload! @deprecated(reason: "Please use the new paginated many mutation (unpublishManyInspirationItemsConnection)")

  """Create one feedItemCategory"""
  createFeedItemCategory(data: FeedItemCategoryCreateInput!): FeedItemCategory

  """Update one feedItemCategory"""
  updateFeedItemCategory(where: FeedItemCategoryWhereUniqueInput!, data: FeedItemCategoryUpdateInput!): FeedItemCategory

  """
  Delete one feedItemCategory from _all_ existing stages. Returns deleted document.
  """
  deleteFeedItemCategory(
    """Document to delete"""
    where: FeedItemCategoryWhereUniqueInput!
  ): FeedItemCategory

  """Upsert one feedItemCategory"""
  upsertFeedItemCategory(where: FeedItemCategoryWhereUniqueInput!, upsert: FeedItemCategoryUpsertInput!): FeedItemCategory

  """Publish one feedItemCategory"""
  publishFeedItemCategory(
    """Document to publish"""
    where: FeedItemCategoryWhereUniqueInput!

    """Publishing target stage"""
    to: [Stage!]! = [PUBLISHED]
  ): FeedItemCategory

  """
  Unpublish one feedItemCategory from selected stages. Unpublish either the
  complete document with its relations, localizations and base data or specific
  localizations only.
  """
  unpublishFeedItemCategory(
    """Document to unpublish"""
    where: FeedItemCategoryWhereUniqueInput!

    """Stages to unpublish document from"""
    from: [Stage!]! = [PUBLISHED]
  ): FeedItemCategory

  """Update many FeedItemCategory documents"""
  updateManyFeedItemCategoriesConnection(
    """Documents to apply update on"""
    where: FeedItemCategoryManyWhereInput

    """Updates to document content"""
    data: FeedItemCategoryUpdateManyInput!
    skip: Int
    first: Int
    last: Int
    before: ID
    after: ID
  ): FeedItemCategoryConnection!

  """Delete many FeedItemCategory documents, return deleted documents"""
  deleteManyFeedItemCategoriesConnection(
    """Documents to delete"""
    where: FeedItemCategoryManyWhereInput
    skip: Int
    first: Int
    last: Int
    before: ID
    after: ID
  ): FeedItemCategoryConnection!

  """Publish many FeedItemCategory documents"""
  publishManyFeedItemCategoriesConnection(
    """Identifies documents in each stage to be published"""
    where: FeedItemCategoryManyWhereInput

    """Stage to find matching documents in"""
    from: Stage = DRAFT

    """Stages to publish documents to"""
    to: [Stage!]! = [PUBLISHED]
    skip: Int
    first: Int
    last: Int
    before: ID
    after: ID
  ): FeedItemCategoryConnection!

  """
  Find many FeedItemCategory documents that match criteria in specified stage and unpublish from target stages
  """
  unpublishManyFeedItemCategoriesConnection(
    """Identifies documents in draft stage"""
    where: FeedItemCategoryManyWhereInput

    """Stage to find matching documents in"""
    stage: Stage = DRAFT

    """Stages to unpublish documents from"""
    from: [Stage!]! = [PUBLISHED]
    skip: Int
    first: Int
    last: Int
    before: ID
    after: ID
  ): FeedItemCategoryConnection!

  """Update many feedItemCategories"""
  updateManyFeedItemCategories(
    """Documents to apply update on"""
    where: FeedItemCategoryManyWhereInput

    """Updates to document content"""
    data: FeedItemCategoryUpdateManyInput!
  ): BatchPayload! @deprecated(reason: "Please use the new paginated many mutation (updateManyFeedItemCategoriesConnection)")

  """Delete many FeedItemCategory documents"""
  deleteManyFeedItemCategories(
    """Documents to delete"""
    where: FeedItemCategoryManyWhereInput
  ): BatchPayload! @deprecated(reason: "Please use the new paginated many mutation (deleteManyFeedItemCategoriesConnection)")

  """Publish many FeedItemCategory documents"""
  publishManyFeedItemCategories(
    """Identifies documents in each stage to be published"""
    where: FeedItemCategoryManyWhereInput

    """Stages to publish documents to"""
    to: [Stage!]! = [PUBLISHED]
  ): BatchPayload! @deprecated(reason: "Please use the new paginated many mutation (publishManyFeedItemCategoriesConnection)")

  """Unpublish many FeedItemCategory documents"""
  unpublishManyFeedItemCategories(
    """Identifies documents in each stage"""
    where: FeedItemCategoryManyWhereInput

    """Stages to unpublish documents from"""
    from: [Stage!]! = [PUBLISHED]
  ): BatchPayload! @deprecated(reason: "Please use the new paginated many mutation (unpublishManyFeedItemCategoriesConnection)")

  """Create one category"""
  createCategory(data: CategoryCreateInput!): Category

  """Update one category"""
  updateCategory(where: CategoryWhereUniqueInput!, data: CategoryUpdateInput!): Category

  """
  Delete one category from _all_ existing stages. Returns deleted document.
  """
  deleteCategory(
    """Document to delete"""
    where: CategoryWhereUniqueInput!
  ): Category

  """Upsert one category"""
  upsertCategory(where: CategoryWhereUniqueInput!, upsert: CategoryUpsertInput!): Category

  """Publish one category"""
  publishCategory(
    """Document to publish"""
    where: CategoryWhereUniqueInput!

    """Publishing target stage"""
    to: [Stage!]! = [PUBLISHED]
  ): Category

  """
  Unpublish one category from selected stages. Unpublish either the complete
  document with its relations, localizations and base data or specific
  localizations only.
  """
  unpublishCategory(
    """Document to unpublish"""
    where: CategoryWhereUniqueInput!

    """Stages to unpublish document from"""
    from: [Stage!]! = [PUBLISHED]
  ): Category

  """Update many Category documents"""
  updateManyCategoriesConnection(
    """Documents to apply update on"""
    where: CategoryManyWhereInput

    """Updates to document content"""
    data: CategoryUpdateManyInput!
    skip: Int
    first: Int
    last: Int
    before: ID
    after: ID
  ): CategoryConnection!

  """Delete many Category documents, return deleted documents"""
  deleteManyCategoriesConnection(
    """Documents to delete"""
    where: CategoryManyWhereInput
    skip: Int
    first: Int
    last: Int
    before: ID
    after: ID
  ): CategoryConnection!

  """Publish many Category documents"""
  publishManyCategoriesConnection(
    """Identifies documents in each stage to be published"""
    where: CategoryManyWhereInput

    """Stage to find matching documents in"""
    from: Stage = DRAFT

    """Stages to publish documents to"""
    to: [Stage!]! = [PUBLISHED]
    skip: Int
    first: Int
    last: Int
    before: ID
    after: ID
  ): CategoryConnection!

  """
  Find many Category documents that match criteria in specified stage and unpublish from target stages
  """
  unpublishManyCategoriesConnection(
    """Identifies documents in draft stage"""
    where: CategoryManyWhereInput

    """Stage to find matching documents in"""
    stage: Stage = DRAFT

    """Stages to unpublish documents from"""
    from: [Stage!]! = [PUBLISHED]
    skip: Int
    first: Int
    last: Int
    before: ID
    after: ID
  ): CategoryConnection!

  """Update many categories"""
  updateManyCategories(
    """Documents to apply update on"""
    where: CategoryManyWhereInput

    """Updates to document content"""
    data: CategoryUpdateManyInput!
  ): BatchPayload! @deprecated(reason: "Please use the new paginated many mutation (updateManyCategoriesConnection)")

  """Delete many Category documents"""
  deleteManyCategories(
    """Documents to delete"""
    where: CategoryManyWhereInput
  ): BatchPayload! @deprecated(reason: "Please use the new paginated many mutation (deleteManyCategoriesConnection)")

  """Publish many Category documents"""
  publishManyCategories(
    """Identifies documents in each stage to be published"""
    where: CategoryManyWhereInput

    """Stages to publish documents to"""
    to: [Stage!]! = [PUBLISHED]
  ): BatchPayload! @deprecated(reason: "Please use the new paginated many mutation (publishManyCategoriesConnection)")

  """Unpublish many Category documents"""
  unpublishManyCategories(
    """Identifies documents in each stage"""
    where: CategoryManyWhereInput

    """Stages to unpublish documents from"""
    from: [Stage!]! = [PUBLISHED]
  ): BatchPayload! @deprecated(reason: "Please use the new paginated many mutation (unpublishManyCategoriesConnection)")
}

"""An object with an ID"""
interface Node {
  """The id of the object."""
  id: ID!

  """The Stage of an object"""
  stage: Stage!
}

"""Information about pagination in a connection."""
type PageInfo {
  """When paginating forwards, are there more items?"""
  hasNextPage: Boolean!

  """When paginating backwards, are there more items?"""
  hasPreviousPage: Boolean!

  """When paginating backwards, the cursor to continue."""
  startCursor: String

  """When paginating forwards, the cursor to continue."""
  endCursor: String

  """Number of items in the current page."""
  pageSize: Int
}

"""subscription prices"""
enum Plan {
  Monthly
  Yearly
  Quarterly
}

enum PreExistingCondition {
  Diabetes
  A_thyroid_conditions
  Irritable_bowl_condition
  Abnormal_blood_condtion
}

input PublishLocaleInput {
  """Locales to publish"""
  locale: Locale!

  """Stages to publish selected locales to"""
  stages: [Stage!]!
}

type Query {
  """Fetches an object given its ID"""
  node(
    """The ID of an object"""
    id: ID!
    stage: Stage! = PUBLISHED

    """
    Defines which locales should be returned.
    
    Note that `Node` is a model without localized fields and will not be
    affected directly by this argument, however the locales will be passed on to
    any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first
    locale matching the provided list of locales will be returned, entries with
    non matching locales will be filtered out.
    
    This argument may be overwritten by another locales definition in a
    relational child field, this will effectively use the overwritten argument
    for the affected query's subtree.
    """
    locales: [Locale!]! = [en]
  ): Node

  """Retrieve multiple assets"""
  assets(
    where: AssetWhereInput
    orderBy: AssetOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
    stage: Stage! = PUBLISHED

    """
    Defines which locales should be returned.
    
    Note that `Asset` will be affected directly by this argument, as well as any
    other related models with localized fields in the query's subtree.
    The first locale matching the provided list will be returned, entries with non matching locales will be filtered out.
    
    This argument may be overwritten by another locales definition in a
    relational child field, this will effectively use the overwritten argument
    for the affected query's subtree.
    """
    locales: [Locale!]! = [en]
  ): [Asset!]!

  """Retrieve a single asset"""
  asset(
    where: AssetWhereUniqueInput!
    stage: Stage! = PUBLISHED

    """
    Defines which locales should be returned.
    
    Note that `Asset` will be affected directly by this argument, as well as any
    other related models with localized fields in the query's subtree.
    The first locale matching the provided list will be returned, entries with non matching locales will be filtered out.
    
    This argument may be overwritten by another locales definition in a
    relational child field, this will effectively use the overwritten argument
    for the affected query's subtree.
    """
    locales: [Locale!]! = [en]
  ): Asset

  """Retrieve multiple assets using the Relay connection interface"""
  assetsConnection(
    where: AssetWhereInput
    orderBy: AssetOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
    stage: Stage! = PUBLISHED

    """
    Defines which locales should be returned.
    
    Note that `Asset` will be affected directly by this argument, as well as any
    other related models with localized fields in the query's subtree.
    The first locale matching the provided list will be returned, entries with non matching locales will be filtered out.
    
    This argument may be overwritten by another locales definition in a
    relational child field, this will effectively use the overwritten argument
    for the affected query's subtree.
    """
    locales: [Locale!]! = [en]
  ): AssetConnection!

  """Retrieve document version"""
  assetVersion(where: VersionWhereInput!): DocumentVersion

  """Retrieve multiple feedItems"""
  feedItems(
    where: FeedItemWhereInput
    orderBy: FeedItemOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
    stage: Stage! = PUBLISHED

    """
    Defines which locales should be returned.
    
    Note that `FeedItem` is a model without localized fields and will not be
    affected directly by this argument, however the locales will be passed on to
    any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first
    locale matching the provided list of locales will be returned, entries with
    non matching locales will be filtered out.
    
    This argument may be overwritten by another locales definition in a
    relational child field, this will effectively use the overwritten argument
    for the affected query's subtree.
    """
    locales: [Locale!]! = [en]
  ): [FeedItem!]!

  """Retrieve a single feedItem"""
  feedItem(
    where: FeedItemWhereUniqueInput!
    stage: Stage! = PUBLISHED

    """
    Defines which locales should be returned.
    
    Note that `FeedItem` is a model without localized fields and will not be
    affected directly by this argument, however the locales will be passed on to
    any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first
    locale matching the provided list of locales will be returned, entries with
    non matching locales will be filtered out.
    
    This argument may be overwritten by another locales definition in a
    relational child field, this will effectively use the overwritten argument
    for the affected query's subtree.
    """
    locales: [Locale!]! = [en]
  ): FeedItem

  """Retrieve multiple feedItems using the Relay connection interface"""
  feedItemsConnection(
    where: FeedItemWhereInput
    orderBy: FeedItemOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
    stage: Stage! = PUBLISHED

    """
    Defines which locales should be returned.
    
    Note that `FeedItem` is a model without localized fields and will not be
    affected directly by this argument, however the locales will be passed on to
    any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first
    locale matching the provided list of locales will be returned, entries with
    non matching locales will be filtered out.
    
    This argument may be overwritten by another locales definition in a
    relational child field, this will effectively use the overwritten argument
    for the affected query's subtree.
    """
    locales: [Locale!]! = [en]
  ): FeedItemConnection!

  """Retrieve document version"""
  feedItemVersion(where: VersionWhereInput!): DocumentVersion

  """Retrieve multiple users"""
  users(
    where: UserWhereInput
    orderBy: UserOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
    stage: Stage! = PUBLISHED

    """
    Defines which locales should be returned.
    
    Note that `User` is a model without localized fields and will not be
    affected directly by this argument, however the locales will be passed on to
    any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first
    locale matching the provided list of locales will be returned, entries with
    non matching locales will be filtered out.
    
    This argument may be overwritten by another locales definition in a
    relational child field, this will effectively use the overwritten argument
    for the affected query's subtree.
    """
    locales: [Locale!]! = [en]
  ): [User!]!

  """Retrieve a single user"""
  user(
    where: UserWhereUniqueInput!
    stage: Stage! = PUBLISHED

    """
    Defines which locales should be returned.
    
    Note that `User` is a model without localized fields and will not be
    affected directly by this argument, however the locales will be passed on to
    any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first
    locale matching the provided list of locales will be returned, entries with
    non matching locales will be filtered out.
    
    This argument may be overwritten by another locales definition in a
    relational child field, this will effectively use the overwritten argument
    for the affected query's subtree.
    """
    locales: [Locale!]! = [en]
  ): User

  """Retrieve multiple users using the Relay connection interface"""
  usersConnection(
    where: UserWhereInput
    orderBy: UserOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
    stage: Stage! = PUBLISHED

    """
    Defines which locales should be returned.
    
    Note that `User` is a model without localized fields and will not be
    affected directly by this argument, however the locales will be passed on to
    any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first
    locale matching the provided list of locales will be returned, entries with
    non matching locales will be filtered out.
    
    This argument may be overwritten by another locales definition in a
    relational child field, this will effectively use the overwritten argument
    for the affected query's subtree.
    """
    locales: [Locale!]! = [en]
  ): UserConnection!

  """Retrieve multiple inspirationItems"""
  inspirationItems(
    where: InspirationItemWhereInput
    orderBy: InspirationItemOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
    stage: Stage! = PUBLISHED

    """
    Defines which locales should be returned.
    
    Note that `InspirationItem` is a model without localized fields and will not
    be affected directly by this argument, however the locales will be passed on
    to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first
    locale matching the provided list of locales will be returned, entries with
    non matching locales will be filtered out.
    
    This argument may be overwritten by another locales definition in a
    relational child field, this will effectively use the overwritten argument
    for the affected query's subtree.
    """
    locales: [Locale!]! = [en]
  ): [InspirationItem!]!

  """Retrieve a single inspirationItem"""
  inspirationItem(
    where: InspirationItemWhereUniqueInput!
    stage: Stage! = PUBLISHED

    """
    Defines which locales should be returned.
    
    Note that `InspirationItem` is a model without localized fields and will not
    be affected directly by this argument, however the locales will be passed on
    to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first
    locale matching the provided list of locales will be returned, entries with
    non matching locales will be filtered out.
    
    This argument may be overwritten by another locales definition in a
    relational child field, this will effectively use the overwritten argument
    for the affected query's subtree.
    """
    locales: [Locale!]! = [en]
  ): InspirationItem

  """
  Retrieve multiple inspirationItems using the Relay connection interface
  """
  inspirationItemsConnection(
    where: InspirationItemWhereInput
    orderBy: InspirationItemOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
    stage: Stage! = PUBLISHED

    """
    Defines which locales should be returned.
    
    Note that `InspirationItem` is a model without localized fields and will not
    be affected directly by this argument, however the locales will be passed on
    to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first
    locale matching the provided list of locales will be returned, entries with
    non matching locales will be filtered out.
    
    This argument may be overwritten by another locales definition in a
    relational child field, this will effectively use the overwritten argument
    for the affected query's subtree.
    """
    locales: [Locale!]! = [en]
  ): InspirationItemConnection!

  """Retrieve document version"""
  inspirationItemVersion(where: VersionWhereInput!): DocumentVersion

  """Retrieve multiple feedItemCategories"""
  feedItemCategories(
    where: FeedItemCategoryWhereInput
    orderBy: FeedItemCategoryOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
    stage: Stage! = PUBLISHED

    """
    Defines which locales should be returned.
    
    Note that `FeedItemCategory` is a model without localized fields and will
    not be affected directly by this argument, however the locales will be
    passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first
    locale matching the provided list of locales will be returned, entries with
    non matching locales will be filtered out.
    
    This argument may be overwritten by another locales definition in a
    relational child field, this will effectively use the overwritten argument
    for the affected query's subtree.
    """
    locales: [Locale!]! = [en]
  ): [FeedItemCategory!]!

  """Retrieve a single feedItemCategory"""
  feedItemCategory(
    where: FeedItemCategoryWhereUniqueInput!
    stage: Stage! = PUBLISHED

    """
    Defines which locales should be returned.
    
    Note that `FeedItemCategory` is a model without localized fields and will
    not be affected directly by this argument, however the locales will be
    passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first
    locale matching the provided list of locales will be returned, entries with
    non matching locales will be filtered out.
    
    This argument may be overwritten by another locales definition in a
    relational child field, this will effectively use the overwritten argument
    for the affected query's subtree.
    """
    locales: [Locale!]! = [en]
  ): FeedItemCategory

  """
  Retrieve multiple feedItemCategories using the Relay connection interface
  """
  feedItemCategoriesConnection(
    where: FeedItemCategoryWhereInput
    orderBy: FeedItemCategoryOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
    stage: Stage! = PUBLISHED

    """
    Defines which locales should be returned.
    
    Note that `FeedItemCategory` is a model without localized fields and will
    not be affected directly by this argument, however the locales will be
    passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first
    locale matching the provided list of locales will be returned, entries with
    non matching locales will be filtered out.
    
    This argument may be overwritten by another locales definition in a
    relational child field, this will effectively use the overwritten argument
    for the affected query's subtree.
    """
    locales: [Locale!]! = [en]
  ): FeedItemCategoryConnection!

  """Retrieve document version"""
  feedItemCategoryVersion(where: VersionWhereInput!): DocumentVersion

  """Retrieve multiple categories"""
  categories(
    where: CategoryWhereInput
    orderBy: CategoryOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
    stage: Stage! = PUBLISHED

    """
    Defines which locales should be returned.
    
    Note that `Category` is a model without localized fields and will not be
    affected directly by this argument, however the locales will be passed on to
    any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first
    locale matching the provided list of locales will be returned, entries with
    non matching locales will be filtered out.
    
    This argument may be overwritten by another locales definition in a
    relational child field, this will effectively use the overwritten argument
    for the affected query's subtree.
    """
    locales: [Locale!]! = [en]
  ): [Category!]!

  """Retrieve a single category"""
  category(
    where: CategoryWhereUniqueInput!
    stage: Stage! = PUBLISHED

    """
    Defines which locales should be returned.
    
    Note that `Category` is a model without localized fields and will not be
    affected directly by this argument, however the locales will be passed on to
    any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first
    locale matching the provided list of locales will be returned, entries with
    non matching locales will be filtered out.
    
    This argument may be overwritten by another locales definition in a
    relational child field, this will effectively use the overwritten argument
    for the affected query's subtree.
    """
    locales: [Locale!]! = [en]
  ): Category

  """Retrieve multiple categories using the Relay connection interface"""
  categoriesConnection(
    where: CategoryWhereInput
    orderBy: CategoryOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
    stage: Stage! = PUBLISHED

    """
    Defines which locales should be returned.
    
    Note that `Category` is a model without localized fields and will not be
    affected directly by this argument, however the locales will be passed on to
    any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first
    locale matching the provided list of locales will be returned, entries with
    non matching locales will be filtered out.
    
    This argument may be overwritten by another locales definition in a
    relational child field, this will effectively use the overwritten argument
    for the affected query's subtree.
    """
    locales: [Locale!]! = [en]
  ): CategoryConnection!

  """Retrieve document version"""
  categoryVersion(where: VersionWhereInput!): DocumentVersion
}

"""
Representing a RGBA color value: https://developer.mozilla.org/en-US/docs/Web/CSS/color_value#rgb()_and_rgba()
"""
type RGBA {
  r: RGBAHue!
  g: RGBAHue!
  b: RGBAHue!
  a: RGBATransparency!
}

scalar RGBAHue

"""
Input type representing a RGBA color value: https://developer.mozilla.org/en-US/docs/Web/CSS/color_value#rgb()_and_rgba()
"""
input RGBAInput {
  r: RGBAHue!
  g: RGBAHue!
  b: RGBAHue!
  a: RGBATransparency!
}

scalar RGBATransparency

"""
Custom type representing a rich text value comprising of raw rich text ast, html, markdown and text values
"""
type RichText {
  """Returns AST representation"""
  raw: RichTextAST!

  """Returns HTMl representation"""
  html: String!

  """Returns Markdown representation"""
  markdown: String!

  """Returns plain-text contents of RichText"""
  text: String!
}

"""Slate-compatible RichText AST"""
scalar RichTextAST

enum Sex {
  Female
  Male
  Non_binary
}

"""Stage system enumeration"""
enum Stage {
  """The Draft is the default stage for all your content."""
  DRAFT

  """The Published stage is where you can publish your content to."""
  PUBLISHED
}

enum SystemDateTimeFieldVariation {
  BASE
  LOCALIZATION
  COMBINED
}

input UnpublishLocaleInput {
  """Locales to unpublish"""
  locale: Locale!

  """Stages to unpublish selected locales from"""
  stages: [Stage!]!
}

"""User system model"""
type User implements Node {
  """System stage field"""
  stage: Stage!

  """Get the document in other stages"""
  documentInStages(
    """Potential stages that should be returned"""
    stages: [Stage!]! = [DRAFT, PUBLISHED]

    """Decides if the current stage should be included or not"""
    includeCurrent: Boolean! = false

    """
    Decides if the documents should match the parent documents locale or should use the fallback order defined in the tree
    """
    inheritLocale: Boolean! = false
  ): [User!]!

  """The unique identifier"""
  id: ID!

  """The time the document was created"""
  createdAt: DateTime!

  """The time the document was updated"""
  updatedAt: DateTime!

  """The time the document was published. Null on documents in draft stage."""
  publishedAt: DateTime

  """The username"""
  name: String!

  """Profile Picture url"""
  picture: String

  """Flag to determine if user is active or not"""
  isActive: Boolean!

  """User Kind. Can be either MEMBER, PAT or PUBLIC"""
  kind: UserKind!
}

input UserConnectInput {
  """Document to connect"""
  where: UserWhereUniqueInput!

  """
  Allow to specify document position in list of connected documents, will default to appending at end of list
  """
  position: ConnectPositionInput
}

"""A connection to a list of items."""
type UserConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [UserEdge!]!
  aggregate: Aggregate!
}

input UserCreateManyInlineInput {
  """Connect multiple existing User documents"""
  connect: [UserWhereUniqueInput!]
}

input UserCreateOneInlineInput {
  """Connect one existing User document"""
  connect: UserWhereUniqueInput
}

"""An edge in a connection."""
type UserEdge {
  """The item at the end of the edge."""
  node: User!

  """A cursor for use in pagination."""
  cursor: String!
}

"""System User Kind"""
enum UserKind {
  MEMBER
  PAT
  PUBLIC
  WEBHOOK
}

"""Identifies documents"""
input UserManyWhereInput {
  """Contains search across all appropriate fields."""
  _search: String

  """Logical AND on all given filters."""
  AND: [UserWhereInput!]

  """Logical OR on all given filters."""
  OR: [UserWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [UserWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string"""
  id_not_ends_with: ID
  createdAt: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updatedAt: DateTime

  """All values that are not equal to given value."""
  updatedAt_not: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  publishedAt: DateTime

  """All values that are not equal to given value."""
  publishedAt_not: DateTime

  """All values that are contained in given list."""
  publishedAt_in: [DateTime!]

  """All values that are not contained in given list."""
  publishedAt_not_in: [DateTime!]

  """All values less than the given value."""
  publishedAt_lt: DateTime

  """All values less than or equal the given value."""
  publishedAt_lte: DateTime

  """All values greater than the given value."""
  publishedAt_gt: DateTime

  """All values greater than or equal the given value."""
  publishedAt_gte: DateTime
  name: String

  """All values that are not equal to given value."""
  name_not: String

  """All values that are contained in given list."""
  name_in: [String!]

  """All values that are not contained in given list."""
  name_not_in: [String!]

  """All values containing the given string."""
  name_contains: String

  """All values not containing the given string."""
  name_not_contains: String

  """All values starting with the given string."""
  name_starts_with: String

  """All values not starting with the given string."""
  name_not_starts_with: String

  """All values ending with the given string."""
  name_ends_with: String

  """All values not ending with the given string"""
  name_not_ends_with: String
  picture: String

  """All values that are not equal to given value."""
  picture_not: String

  """All values that are contained in given list."""
  picture_in: [String!]

  """All values that are not contained in given list."""
  picture_not_in: [String!]

  """All values containing the given string."""
  picture_contains: String

  """All values not containing the given string."""
  picture_not_contains: String

  """All values starting with the given string."""
  picture_starts_with: String

  """All values not starting with the given string."""
  picture_not_starts_with: String

  """All values ending with the given string."""
  picture_ends_with: String

  """All values not ending with the given string"""
  picture_not_ends_with: String
  isActive: Boolean

  """All values that are not equal to given value."""
  isActive_not: Boolean
  kind: UserKind

  """All values that are not equal to given value."""
  kind_not: UserKind

  """All values that are contained in given list."""
  kind_in: [UserKind!]

  """All values that are not contained in given list."""
  kind_not_in: [UserKind!]
}

enum UserOrderByInput {
  id_ASC
  id_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  publishedAt_ASC
  publishedAt_DESC
  name_ASC
  name_DESC
  picture_ASC
  picture_DESC
  isActive_ASC
  isActive_DESC
  kind_ASC
  kind_DESC
}

input UserUpdateManyInlineInput {
  """Connect multiple existing User documents"""
  connect: [UserConnectInput!]

  """
  Override currently-connected documents with multiple existing User documents
  """
  set: [UserWhereUniqueInput!]

  """Disconnect multiple User documents"""
  disconnect: [UserWhereUniqueInput!]
}

input UserUpdateOneInlineInput {
  """Connect existing User document"""
  connect: UserWhereUniqueInput

  """Disconnect currently connected User document"""
  disconnect: Boolean
}

"""Identifies documents"""
input UserWhereInput {
  """Contains search across all appropriate fields."""
  _search: String

  """Logical AND on all given filters."""
  AND: [UserWhereInput!]

  """Logical OR on all given filters."""
  OR: [UserWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [UserWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string"""
  id_not_ends_with: ID
  createdAt: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updatedAt: DateTime

  """All values that are not equal to given value."""
  updatedAt_not: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  publishedAt: DateTime

  """All values that are not equal to given value."""
  publishedAt_not: DateTime

  """All values that are contained in given list."""
  publishedAt_in: [DateTime!]

  """All values that are not contained in given list."""
  publishedAt_not_in: [DateTime!]

  """All values less than the given value."""
  publishedAt_lt: DateTime

  """All values less than or equal the given value."""
  publishedAt_lte: DateTime

  """All values greater than the given value."""
  publishedAt_gt: DateTime

  """All values greater than or equal the given value."""
  publishedAt_gte: DateTime
  name: String

  """All values that are not equal to given value."""
  name_not: String

  """All values that are contained in given list."""
  name_in: [String!]

  """All values that are not contained in given list."""
  name_not_in: [String!]

  """All values containing the given string."""
  name_contains: String

  """All values not containing the given string."""
  name_not_contains: String

  """All values starting with the given string."""
  name_starts_with: String

  """All values not starting with the given string."""
  name_not_starts_with: String

  """All values ending with the given string."""
  name_ends_with: String

  """All values not ending with the given string"""
  name_not_ends_with: String
  picture: String

  """All values that are not equal to given value."""
  picture_not: String

  """All values that are contained in given list."""
  picture_in: [String!]

  """All values that are not contained in given list."""
  picture_not_in: [String!]

  """All values containing the given string."""
  picture_contains: String

  """All values not containing the given string."""
  picture_not_contains: String

  """All values starting with the given string."""
  picture_starts_with: String

  """All values not starting with the given string."""
  picture_not_starts_with: String

  """All values ending with the given string."""
  picture_ends_with: String

  """All values not ending with the given string"""
  picture_not_ends_with: String
  isActive: Boolean

  """All values that are not equal to given value."""
  isActive_not: Boolean
  kind: UserKind

  """All values that are not equal to given value."""
  kind_not: UserKind

  """All values that are contained in given list."""
  kind_in: [UserKind!]

  """All values that are not contained in given list."""
  kind_not_in: [UserKind!]
}

"""References User record uniquely"""
input UserWhereUniqueInput {
  id: ID
}

type Version {
  id: ID!
  stage: Stage!
  revision: Int!
  createdAt: DateTime!
}

input VersionWhereInput {
  id: ID!
  stage: Stage!
  revision: Int!
}

